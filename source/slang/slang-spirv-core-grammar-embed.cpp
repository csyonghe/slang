// Source embedding for SPIR-V core grammar
//
// This file was carefully generated by a machine,
// don't even think about modifying it yourself!
//

#include "../core/slang-smart-pointer.h"
#include "../compiler-core/slang-spirv-core-grammar.h"
namespace Slang
{
bool lookupSpvOp(const UnownedStringSlice& str, SpvOp& value)
{
    static const unsigned tableSalt[718] = {
        2, 1, 7, 1, 0, 0, 1, 1, 3, 0, 3, 1, 2, 1, 2, 2,
        3, 6, 1, 0, 1, 3, 2, 0, 1, 0, 1, 1, 1, 1, 0, 0,
        1, 0, 1, 0, 0, 2, 1, 1, 1, 2, 5, 0, 2, 0, 1, 0,
        1, 1, 0, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 2, 0,
        3, 2, 1, 3, 1, 2, 0, 0, 3, 5, 0, 1, 0, 0, 0, 3,
        0, 2, 0, 0, 0, 8, 3, 2, 1, 3, 1, 0, 0, 1, 1, 0,
        0, 0, 0, 2, 1, 0, 2, 1, 0, 0, 4, 5, 1, 5, 0, 0,
        0, 5, 0, 0, 0, 0, 1, 1, 0, 5, 0, 2, 12, 0, 0, 2,
        0, 0, 2, 1, 0, 1, 2, 5, 0, 1, 4, 7, 1, 2, 1, 0,
        2, 3, 0, 0, 4, 9, 0, 0, 3, 1, 4, 0, 0, 2, 2, 1,
        2, 0, 6, 2, 1, 0, 1, 0, 0, 3, 3, 2, 2, 1, 1, 7,
        2, 2, 2, 0, 0, 0, 3, 0, 4, 0, 1, 2, 1, 0, 0, 1,
        1, 3, 6, 1, 0, 1, 3, 2, 1, 1, 0, 2, 5, 0, 1, 0,
        1, 0, 7, 0, 4, 0, 1, 1, 2, 0, 0, 1, 2, 1, 1, 5,
        0, 2, 0, 4, 0, 0, 8, 0, 0, 7, 3, 3, 10, 0, 0, 1,
        1, 1, 0, 3, 4, 6, 0, 2, 2, 1, 12, 2, 0, 1, 3, 6,
        2, 2, 3, 0, 0, 2, 0, 0, 1, 4, 4, 4, 1, 1, 1, 2,
        7, 7, 4, 4, 3, 1, 0, 1, 10, 3, 1, 0, 6, 0, 1, 2,
        0, 0, 1, 2, 3, 2, 2, 1, 10, 1, 0, 4, 1, 0, 1, 0,
        2, 5, 3, 0, 1, 4, 0, 5, 3, 0, 0, 0, 17, 0, 1, 0,
        0, 3, 1, 4, 0, 0, 3, 0, 1, 3, 1, 2, 2, 20, 0, 4,
        0, 1, 0, 1, 6, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 1,
        5, 15, 2, 0, 0, 2, 1, 0, 2, 4, 0, 8, 0, 0, 0, 4,
        0, 0, 0, 15, 0, 0, 0, 0, 2, 0, 2, 3, 2, 6, 9, 6,
        0, 3, 0, 0, 0, 6, 2, 0, 1, 0, 5, 8, 14, 2, 4, 9,
        1, 2, 0, 11, 7, 0, 3, 2, 3, 2, 0, 0, 3, 2, 8, 4,
        0, 0, 4, 1, 8, 1, 0, 3, 5, 0, 2, 4, 0, 1, 2, 0,
        6, 0, 5, 2, 28, 1, 1, 4, 12, 30, 10, 1, 0, 3, 18, 0,
        1, 4, 1, 0, 1, 2, 0, 6, 6, 9, 1, 0, 0, 1, 1, 0,
        14, 3, 4, 0, 14, 2, 3, 0, 0, 1, 1, 0, 14, 1, 5, 1,
        15, 2, 0, 20, 3, 20, 5, 0, 10, 6, 0, 9, 4, 0, 0, 11,
        1, 0, 2, 0, 0, 0, 0, 0, 29, 5, 1, 2, 0, 4, 0, 10,
        10, 2, 9, 0, 1, 0, 5, 20, 0, 6, 0, 11, 2, 2, 8, 0,
        1, 0, 4, 0, 0, 1, 0, 9, 3, 0, 2, 11, 2, 4, 0, 0,
        28, 0, 10, 0, 0, 11, 0, 18, 7, 13, 2, 31, 2, 3, 5, 5,
        0, 18, 1, 0, 1, 25, 1, 17, 6, 35, 2, 1, 62, 4, 0, 25,
        48, 36, 11, 7, 2, 22, 0, 2, 1, 2, 48, 2, 0, 0, 0, 0,
        0, 1, 5, 22, 0, 1, 2, 10, 0, 11, 0, 19, 2, 0, 0, 4,
        5, 0, 3, 0, 1, 0, 0, 8, 3, 0, 9, 0, 0, 28, 9, 3,
        51, 38, 2, 11, 0, 1, 0, 0, 5, 0, 1, 0, 0, 13, 27, 8,
        11, 17, 0, 0, 64, 20, 126, 0, 1, 0, 62, 18, 0, 0, 0, 0,
        2, 0, 0, 53, 119, 17, 81, 6, 20, 0, 0, 0, 48, 109, 5, 0,
        0, 0, 46, 3, 22, 2, 160, 1, 49, 0, 0, 0, 0, 4, 124, 0,
        0, 12, 4, 1, 0, 1, 1, 141, 3, 2, 7, 0, 0, 0, 0, 10,
        40, 226, 445, 0, 6, 2, 0, 1, 2, 5, 0, 591, 0, 0
    };

    using KV = std::pair<const char*, SpvOp>;

    static const KV words[718] =
    {
        {"OpReservedWritePipe", static_cast<SpvOp>(277)},
        {"OpSubgroupAvcMceGetInterMinorShapeINTEL", static_cast<SpvOp>(5742)},
        {"OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL", static_cast<SpvOp>(5725)},
        {"OpGroupNonUniformUMin", static_cast<SpvOp>(354)},
        {"OpUGreaterThan", static_cast<SpvOp>(172)},
        {"OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL", static_cast<SpvOp>(5802)},
        {"OpBranch", static_cast<SpvOp>(249)},
        {"OpSubgroupAvcImeSetDualReferenceINTEL", static_cast<SpvOp>(5749)},
        {"OpExpectKHR", static_cast<SpvOp>(5631)},
        {"OpCompositeInsert", static_cast<SpvOp>(82)},
        {"OpSource", static_cast<SpvOp>(3)},
        {"OpSubgroupShuffleDownINTEL", static_cast<SpvOp>(5572)},
        {"OpSubgroupAvcSicConvertToMcePayloadINTEL", static_cast<SpvOp>(5796)},
        {"OpULessThan", static_cast<SpvOp>(176)},
        {"OpTypeRuntimeArray", static_cast<SpvOp>(29)},
        {"OpGroupNonUniformAll", static_cast<SpvOp>(334)},
        {"OpSubgroupAvcSicEvaluateWithDualReferenceINTEL", static_cast<SpvOp>(5805)},
        {"OpSubgroupAvcSicGetIpeLumaShapeINTEL", static_cast<SpvOp>(5809)},
        {"OpSubgroupAvcMceGetInterMotionVectorCountINTEL", static_cast<SpvOp>(5744)},
        {"OpArbitraryFloatLTINTEL", static_cast<SpvOp>(5852)},
        {"OpSourceExtension", static_cast<SpvOp>(4)},
        {"OpLifetimeStop", static_cast<SpvOp>(257)},
        {"OpVectorTimesMatrix", static_cast<SpvOp>(144)},
        {"OpTypeInt", static_cast<SpvOp>(21)},
        {"OpGroupNonUniformBallotBitCount", static_cast<SpvOp>(342)},
        {"OpGroupNonUniformAny", static_cast<SpvOp>(335)},
        {"OpCooperativeMatrixLoadKHR", static_cast<SpvOp>(4457)},
        {"OpISubBorrow", static_cast<SpvOp>(150)},
        {"OpGroupNonUniformShuffle", static_cast<SpvOp>(345)},
        {"OpArbitraryFloatCosPiINTEL", static_cast<SpvOp>(5872)},
        {"OpHitObjectTraceRayNV", static_cast<SpvOp>(5260)},
        {"OpHitObjectGetWorldRayDirectionNV", static_cast<SpvOp>(5272)},
        {"OpRayQueryGetWorldRayDirectionKHR", static_cast<SpvOp>(6029)},
        {"OpImageSampleProjImplicitLod", static_cast<SpvOp>(91)},
        {"OpSDotAccSat", static_cast<SpvOp>(4453)},
        {"OpFNegate", static_cast<SpvOp>(127)},
        {"OpImageSparseSampleImplicitLod", static_cast<SpvOp>(305)},
        {"OpSatConvertUToS", static_cast<SpvOp>(119)},
        {"OpArbitraryFloatLogINTEL", static_cast<SpvOp>(5860)},
        {"OpPtrNotEqual", static_cast<SpvOp>(402)},
        {"OpGroupNonUniformPartitionNV", static_cast<SpvOp>(5296)},
        {"OpFunctionCall", static_cast<SpvOp>(57)},
        {"OpSpecConstantCompositeContinuedINTEL", static_cast<SpvOp>(6092)},
        {"OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL", static_cast<SpvOp>(5713)},
        {"OpIAverageINTEL", static_cast<SpvOp>(5591)},
        {"OpStore", static_cast<SpvOp>(62)},
        {"OpFUnordNotEqual", static_cast<SpvOp>(183)},
        {"OpEntryPoint", static_cast<SpvOp>(15)},
        {"OpAtomicSMin", static_cast<SpvOp>(236)},
        {"OpRayQueryGetIntersectionInstanceCustomIndexKHR", static_cast<SpvOp>(6019)},
        {"OpDecorateId", static_cast<SpvOp>(332)},
        {"OpExecutionModeId", static_cast<SpvOp>(331)},
        {"OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL", static_cast<SpvOp>(5731)},
        {"OpArbitraryFloatExpINTEL", static_cast<SpvOp>(5864)},
        {"OpEndInvocationInterlockEXT", static_cast<SpvOp>(5365)},
        {"OpTypeCooperativeMatrixKHR", static_cast<SpvOp>(4456)},
        {"OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL", static_cast<SpvOp>(5757)},
        {"OpGroupNonUniformBallotBitExtract", static_cast<SpvOp>(341)},
        {"OpImageSampleExplicitLod", static_cast<SpvOp>(88)},
        {"OpImageBlockMatchSADQCOM", static_cast<SpvOp>(4483)},
        {"OpFixedSinINTEL", static_cast<SpvOp>(5926)},
        {"OpBitCount", static_cast<SpvOp>(205)},
        {"OpArbitraryFloatSinINTEL", static_cast<SpvOp>(5868)},
        {"OpAsmCallINTEL", static_cast<SpvOp>(5611)},
        {"OpArbitraryFloatASinPiINTEL", static_cast<SpvOp>(5874)},
        {"OpConstantComposite", static_cast<SpvOp>(44)},
        {"OpExecutionMode", static_cast<SpvOp>(16)},
        {"OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL", static_cast<SpvOp>(5759)},
        {"OpGroupMemberDecorate", static_cast<SpvOp>(75)},
        {"OpUMod", static_cast<SpvOp>(137)},
        {"OpSubgroupAvcRefEvaluateWithDualReferenceINTEL", static_cast<SpvOp>(5787)},
        {"OpGroupNonUniformIAdd", static_cast<SpvOp>(349)},
        {"OpSubgroupAvcRefConvertToMceResultINTEL", static_cast<SpvOp>(5790)},
        {"OpFMod", static_cast<SpvOp>(141)},
        {"OpGroupNonUniformFAdd", static_cast<SpvOp>(350)},
        {"OpFunctionPointerCallINTEL", static_cast<SpvOp>(5601)},
        {"OpVariableLengthArrayINTEL", static_cast<SpvOp>(5818)},
        {"OpHitObjectRecordMissMotionNV", static_cast<SpvOp>(5251)},
        {"OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL", static_cast<SpvOp>(5798)},
        {"OpVectorTimesScalar", static_cast<SpvOp>(142)},
        {"OpFUnordEqual", static_cast<SpvOp>(181)},
        {"OpIEqual", static_cast<SpvOp>(170)},
        {"OpSubgroupAvcMceGetBestInterDistortionsINTEL", static_cast<SpvOp>(5740)},
        {"OpTypeAvcMceResultINTEL", static_cast<SpvOp>(5705)},
        {"OpRayQueryConfirmIntersectionKHR", static_cast<SpvOp>(4476)},
        {"OpSelect", static_cast<SpvOp>(169)},
        {"OpWritePipe", static_cast<SpvOp>(275)},
        {"OpSubgroupAvcImeSetWeightedSadINTEL", static_cast<SpvOp>(5756)},
        {"OpTypeRayQueryKHR", static_cast<SpvOp>(4472)},
        {"OpArbitraryFloatGTINTEL", static_cast<SpvOp>(5850)},
        {"OpCopyMemory", static_cast<SpvOp>(63)},
        {"OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL", static_cast<SpvOp>(5729)},
        {"OpHitObjectGetAttributesNV", static_cast<SpvOp>(5266)},
        {"OpFAdd", static_cast<SpvOp>(129)},
        {"OpSetUserEventStatus", static_cast<SpvOp>(301)},
        {"OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL", static_cast<SpvOp>(5714)},
        {"OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL", static_cast<SpvOp>(5771)},
        {"OpUSubSatINTEL", static_cast<SpvOp>(5596)},
        {"OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL", static_cast<SpvOp>(5780)},
        {"OpGetKernelWorkGroupSize", static_cast<SpvOp>(295)},
        {"OpGroupNonUniformBitwiseXor", static_cast<SpvOp>(361)},
        {"OpSUDotAccSat", static_cast<SpvOp>(4455)},
        {"OpFUnordLessThan", static_cast<SpvOp>(185)},
        {"OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL", static_cast<SpvOp>(5801)},
        {"OpConstantCompositeContinuedINTEL", static_cast<SpvOp>(6091)},
        {"OpGroupCommitWritePipe", static_cast<SpvOp>(288)},
        {"OpAssumeTrueKHR", static_cast<SpvOp>(5630)},
        {"OpConvertFToBF16INTEL", static_cast<SpvOp>(6116)},
        {"OpTraceRayKHR", static_cast<SpvOp>(4445)},
        {"OpArbitraryFloatRecipINTEL", static_cast<SpvOp>(5855)},
        {"OpGroupIAddNonUniformAMD", static_cast<SpvOp>(5000)},
        {"OpSubgroupAvcRefSetBidirectionalMixDisableINTEL", static_cast<SpvOp>(5784)},
        {"OpSubgroupAvcMceConvertToRefPayloadINTEL", static_cast<SpvOp>(5734)},
        {"OpTypeAvcSicResultINTEL", static_cast<SpvOp>(5712)},
        {"OpImageSampleWeightedQCOM", static_cast<SpvOp>(4480)},
        {"OpKill", static_cast<SpvOp>(252)},
        {"OpVmeImageINTEL", static_cast<SpvOp>(5699)},
        {"OpGroupNonUniformFMin", static_cast<SpvOp>(355)},
        {"OpSetMeshOutputsEXT", static_cast<SpvOp>(5295)},
        {"OpOuterProduct", static_cast<SpvOp>(147)},
        {"OpArbitraryFloatCastToIntINTEL", static_cast<SpvOp>(5843)},
        {"OpAtomicFAddEXT", static_cast<SpvOp>(6035)},
        {"OpFRem", static_cast<SpvOp>(140)},
        {"OpSubgroupImageBlockReadINTEL", static_cast<SpvOp>(5577)},
        {"OpGetKernelNDrangeSubGroupCount", static_cast<SpvOp>(293)},
        {"OpMemberDecorateString", static_cast<SpvOp>(5633)},
        {"OpSourceContinued", static_cast<SpvOp>(2)},
        {"OpTypeImage", static_cast<SpvOp>(25)},
        {"OpCommitReadPipe", static_cast<SpvOp>(280)},
        {"OpTypeDeviceEvent", static_cast<SpvOp>(35)},
        {"OpTypeAvcImePayloadINTEL", static_cast<SpvOp>(5701)},
        {"OpGroupNonUniformFMul", static_cast<SpvOp>(352)},
        {"OpImageQuerySize", static_cast<SpvOp>(104)},
        {"OpDecorateString", static_cast<SpvOp>(5632)},
        {"OpGroupUMax", static_cast<SpvOp>(270)},
        {"OpAliasScopeListDeclINTEL", static_cast<SpvOp>(5913)},
        {"OpArbitraryFloatPowINTEL", static_cast<SpvOp>(5880)},
        {"OpAtomicFlagClear", static_cast<SpvOp>(319)},
        {"OpSubgroupAvcSicConvertToMceResultINTEL", static_cast<SpvOp>(5808)},
        {"OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL", static_cast<SpvOp>(5763)},
        {"OpReorderThreadWithHitObjectNV", static_cast<SpvOp>(5279)},
        {"OpAtomicXor", static_cast<SpvOp>(242)},
        {"OpGroupAll", static_cast<SpvOp>(261)},
        {"OpImageSparseSampleProjExplicitLod", static_cast<SpvOp>(310)},
        {"OpSDotAccSatKHR", static_cast<SpvOp>(4453)},
        {"OpFUnordLessThanEqual", static_cast<SpvOp>(189)},
        {"OpIAddSatINTEL", static_cast<SpvOp>(5589)},
        {"OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL", static_cast<SpvOp>(5770)},
        {"OpGroupNonUniformBitwiseAnd", static_cast<SpvOp>(359)},
        {"OpTypeAvcMcePayloadINTEL", static_cast<SpvOp>(5704)},
        {"OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL", static_cast<SpvOp>(5724)},
        {"OpDPdxCoarse", static_cast<SpvOp>(213)},
        {"OpPtrCastToCrossWorkgroupINTEL", static_cast<SpvOp>(5934)},
        {"OpSwitch", static_cast<SpvOp>(251)},
        {"OpGenericCastToPtrExplicit", static_cast<SpvOp>(123)},
        {"OpSubgroupAvcSicGetMotionVectorMaskINTEL", static_cast<SpvOp>(5795)},
        {"OpRayQueryGetIntersectionCandidateAABBOpaqueKHR", static_cast<SpvOp>(6026)},
        {"OpArbitraryFloatCastFromIntINTEL", static_cast<SpvOp>(5842)},
        {"OpImageSparseFetch", static_cast<SpvOp>(313)},
        {"OpControlBarrierArriveINTEL", static_cast<SpvOp>(6142)},
        {"OpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL", static_cast<SpvOp>(5721)},
        {"OpFUnordGreaterThan", static_cast<SpvOp>(187)},
        {"OpArrayLength", static_cast<SpvOp>(68)},
        {"OpGroupFMinNonUniformAMD", static_cast<SpvOp>(5002)},
        {"OpCooperativeMatrixStoreNV", static_cast<SpvOp>(5360)},
        {"OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL", static_cast<SpvOp>(5730)},
        {"OpHitObjectTraceRayMotionNV", static_cast<SpvOp>(5256)},
        {"OpEnqueueKernel", static_cast<SpvOp>(292)},
        {"OpConvertFToS", static_cast<SpvOp>(110)},
        {"OpDecorate", static_cast<SpvOp>(71)},
        {"OpSUDotAccSatKHR", static_cast<SpvOp>(4455)},
        {"OpGenericPtrMemSemantics", static_cast<SpvOp>(69)},
        {"OpRayQueryGetIntersectionObjectRayOriginKHR", static_cast<SpvOp>(6028)},
        {"OpGetKernelMaxNumSubgroups", static_cast<SpvOp>(326)},
        {"OpGroupBitwiseXorKHR", static_cast<SpvOp>(6405)},
        {"OpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL", static_cast<SpvOp>(5727)},
        {"OpCooperativeMatrixLoadNV", static_cast<SpvOp>(5359)},
        {"OpFunctionParameter", static_cast<SpvOp>(55)},
        {"OpInBoundsPtrAccessChain", static_cast<SpvOp>(70)},
        {"OpGroupNonUniformLogicalOr", static_cast<SpvOp>(363)},
        {"OpHitObjectGetInstanceCustomIndexNV", static_cast<SpvOp>(5271)},
        {"OpDecorationGroup", static_cast<SpvOp>(73)},
        {"OpRayQueryGetIntersectionInstanceIdKHR", static_cast<SpvOp>(6020)},
        {"OpBitFieldUExtract", static_cast<SpvOp>(203)},
        {"OpTypeArray", static_cast<SpvOp>(28)},
        {"OpFragmentMaskFetchAMD", static_cast<SpvOp>(5011)},
        {"OpHitObjectGetHitKindNV", static_cast<SpvOp>(5267)},
        {"OpUnreachable", static_cast<SpvOp>(255)},
        {"OpImageDrefGather", static_cast<SpvOp>(97)},
        {"OpControlBarrier", static_cast<SpvOp>(224)},
        {"OpGroupNonUniformBallotFindLSB", static_cast<SpvOp>(343)},
        {"OpSConvert", static_cast<SpvOp>(114)},
        {"OpImageSampleFootprintNV", static_cast<SpvOp>(5283)},
        {"OpTypeStructContinuedINTEL", static_cast<SpvOp>(6090)},
        {"OpUDotAccSat", static_cast<SpvOp>(4454)},
        {"OpAtomicFMaxEXT", static_cast<SpvOp>(5615)},
        {"OpImageQueryFormat", static_cast<SpvOp>(101)},
        {"OpSpecConstantOp", static_cast<SpvOp>(52)},
        {"OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL", static_cast<SpvOp>(5797)},
        {"OpGroupNonUniformBallotFindMSB", static_cast<SpvOp>(344)},
        {"OpHitObjectIsEmptyNV", static_cast<SpvOp>(5276)},
        {"OpTypeAvcRefResultINTEL", static_cast<SpvOp>(5711)},
        {"OpSpecConstantComposite", static_cast<SpvOp>(51)},
        {"OpFOrdNotEqual", static_cast<SpvOp>(182)},
        {"OpIsValidEvent", static_cast<SpvOp>(300)},
        {"OpUCountTrailingZerosINTEL", static_cast<SpvOp>(5586)},
        {"OpGroupDecorate", static_cast<SpvOp>(74)},
        {"OpINotEqual", static_cast<SpvOp>(171)},
        {"OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL", static_cast<SpvOp>(5760)},
        {"OpIgnoreIntersectionKHR", static_cast<SpvOp>(4448)},
        {"OpSubgroupBlockWriteINTEL", static_cast<SpvOp>(5576)},
        {"OpVectorShuffle", static_cast<SpvOp>(79)},
        {"OpImageQuerySizeLod", static_cast<SpvOp>(103)},
        {"OpUndef", static_cast<SpvOp>(1)},
        {"OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL", static_cast<SpvOp>(5811)},
        {"OpGroupNonUniformQuadBroadcast", static_cast<SpvOp>(365)},
        {"OpCompositeExtract", static_cast<SpvOp>(81)},
        {"OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL", static_cast<SpvOp>(5768)},
        {"OpAtomicCompareExchangeWeak", static_cast<SpvOp>(231)},
        {"OpIMul", static_cast<SpvOp>(132)},
        {"OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL", static_cast<SpvOp>(5717)},
        {"OpPtrDiff", static_cast<SpvOp>(403)},
        {"OpFixedLogINTEL", static_cast<SpvOp>(5932)},
        {"OpRayQueryGetIntersectionObjectToWorldKHR", static_cast<SpvOp>(6031)},
        {"OpAtomicOr", static_cast<SpvOp>(241)},
        {"OpSubgroupAvcMceConvertToImePayloadINTEL", static_cast<SpvOp>(5732)},
        {"OpAbsUSubINTEL", static_cast<SpvOp>(5588)},
        {"OpConvertUToF", static_cast<SpvOp>(112)},
        {"OpArbitraryFloatACosINTEL", static_cast<SpvOp>(5875)},
        {"OpGroupReserveWritePipePackets", static_cast<SpvOp>(286)},
        {"OpIsNormal", static_cast<SpvOp>(159)},
        {"OpFwidthCoarse", static_cast<SpvOp>(215)},
        {"OpSampledImage", static_cast<SpvOp>(86)},
        {"OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL", static_cast<SpvOp>(5778)},
        {"OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL", static_cast<SpvOp>(5777)},
        {"OpSpecConstantTrue", static_cast<SpvOp>(48)},
        {"OpIsHelperInvocationEXT", static_cast<SpvOp>(5381)},
        {"OpTypeAvcImeResultDualReferenceStreamoutINTEL", static_cast<SpvOp>(5708)},
        {"OpGroupSMaxNonUniformAMD", static_cast<SpvOp>(5007)},
        {"OpGroupAsyncCopy", static_cast<SpvOp>(259)},
        {"OpExecuteCallableKHR", static_cast<SpvOp>(4446)},
        {"OpSubgroupImageMediaBlockReadINTEL", static_cast<SpvOp>(5580)},
        {"OpEmitVertex", static_cast<SpvOp>(218)},
        {"OpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL", static_cast<SpvOp>(5726)},
        {"OpSGreaterThan", static_cast<SpvOp>(173)},
        {"OpLine", static_cast<SpvOp>(8)},
        {"OpHitObjectGetShaderBindingTableRecordIndexNV", static_cast<SpvOp>(5258)},
        {"OpArbitraryFloatDivINTEL", static_cast<SpvOp>(5849)},
        {"OpGroupNonUniformRotateKHR", static_cast<SpvOp>(4431)},
        {"OpTypePipeStorage", static_cast<SpvOp>(322)},
        {"OpIsFinite", static_cast<SpvOp>(158)},
        {"OpUAverageINTEL", static_cast<SpvOp>(5592)},
        {"OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL", static_cast<SpvOp>(5754)},
        {"OpArbitraryFloatLog10INTEL", static_cast<SpvOp>(5862)},
        {"OpFDiv", static_cast<SpvOp>(136)},
        {"OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR", static_cast<SpvOp>(6021)},
        {"OpSubgroupAvcImeSetSingleReferenceINTEL", static_cast<SpvOp>(5748)},
        {"OpGroupNonUniformQuadSwap", static_cast<SpvOp>(366)},
        {"OpRayQueryGetIntersectionFrontFaceKHR", static_cast<SpvOp>(6025)},
        {"OpReadClockKHR", static_cast<SpvOp>(5056)},
        {"OpGroupNonUniformFMax", static_cast<SpvOp>(358)},
        {"OpGroupLogicalAndKHR", static_cast<SpvOp>(6406)},
        {"OpGroupFMin", static_cast<SpvOp>(266)},
        {"OpFMul", static_cast<SpvOp>(133)},
        {"OpNamedBarrierInitialize", static_cast<SpvOp>(328)},
        {"OpGroupUMinNonUniformAMD", static_cast<SpvOp>(5003)},
        {"OpMemoryNamedBarrier", static_cast<SpvOp>(329)},
        {"OpSubgroupAvcImeGetDualReferenceStreaminINTEL", static_cast<SpvOp>(5767)},
        {"OpGroupCommitReadPipe", static_cast<SpvOp>(287)},
        {"OpSubgroupImageMediaBlockWriteINTEL", static_cast<SpvOp>(5581)},
        {"OpConvertPtrToU", static_cast<SpvOp>(117)},
        {"OpGetKernelLocalSizeForSubgroupCount", static_cast<SpvOp>(325)},
        {"OpGroupFAdd", static_cast<SpvOp>(265)},
        {"OpLogicalNot", static_cast<SpvOp>(168)},
        {"OpULessThanEqual", static_cast<SpvOp>(178)},
        {"OpCooperativeMatrixLengthKHR", static_cast<SpvOp>(4460)},
        {"OpHitObjectExecuteShaderNV", static_cast<SpvOp>(5264)},
        {"OpSubgroupAvcMceSetInterDirectionPenaltyINTEL", static_cast<SpvOp>(5718)},
        {"OpTraceMotionNV", static_cast<SpvOp>(5338)},
        {"OpHitObjectGetWorldToObjectNV", static_cast<SpvOp>(5252)},
        {"OpRayQueryGetIntersectionTypeKHR", static_cast<SpvOp>(4479)},
        {"OpFOrdEqual", static_cast<SpvOp>(180)},
        {"OpSubgroupAvcSicGetPackedIpeLumaModesINTEL", static_cast<SpvOp>(5812)},
        {"OpConstant", static_cast<SpvOp>(43)},
        {"OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL", static_cast<SpvOp>(5720)},
        {"OpFixedRecipINTEL", static_cast<SpvOp>(5924)},
        {"OpArbitraryFloatSinCosINTEL", static_cast<SpvOp>(5870)},
        {"OpFConvert", static_cast<SpvOp>(115)},
        {"OpGroupNonUniformInverseBallot", static_cast<SpvOp>(340)},
        {"OpGetKernelNDrangeMaxSubGroupSize", static_cast<SpvOp>(294)},
        {"OpFixedRsqrtINTEL", static_cast<SpvOp>(5925)},
        {"OpRayQueryGetWorldRayOriginKHR", static_cast<SpvOp>(6030)},
        {"OpLifetimeStart", static_cast<SpvOp>(256)},
        {"OpUGreaterThanEqual", static_cast<SpvOp>(174)},
        {"OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL", static_cast<SpvOp>(5810)},
        {"OpImageFetch", static_cast<SpvOp>(95)},
        {"OpFwidth", static_cast<SpvOp>(209)},
        {"OpShiftLeftLogical", static_cast<SpvOp>(196)},
        {"OpString", static_cast<SpvOp>(7)},
        {"OpTypeAvcRefPayloadINTEL", static_cast<SpvOp>(5702)},
        {"OpArbitraryFloatRSqrtINTEL", static_cast<SpvOp>(5856)},
        {"OpHitObjectRecordHitWithIndexNV", static_cast<SpvOp>(5262)},
        {"OpBitFieldSExtract", static_cast<SpvOp>(202)},
        {"OpVectorInsertDynamic", static_cast<SpvOp>(78)},
        {"OpArbitraryFloatCosINTEL", static_cast<SpvOp>(5869)},
        {"OpArbitraryFloatLEINTEL", static_cast<SpvOp>(5853)},
        {"OpTypeAvcImeResultSingleReferenceStreamoutINTEL", static_cast<SpvOp>(5707)},
        {"OpSLessThan", static_cast<SpvOp>(177)},
        {"OpBitwiseAnd", static_cast<SpvOp>(199)},
        {"OpHitObjectGetObjectToWorldNV", static_cast<SpvOp>(5253)},
        {"OpNoLine", static_cast<SpvOp>(317)},
        {"OpHitObjectGetGeometryIndexNV", static_cast<SpvOp>(5269)},
        {"OpArbitraryFloatSinCosPiINTEL", static_cast<SpvOp>(5840)},
        {"OpConstantNull", static_cast<SpvOp>(46)},
        {"OpBuildNDRange", static_cast<SpvOp>(304)},
        {"OpArbitraryFloatCbrtINTEL", static_cast<SpvOp>(5857)},
        {"OpSNegate", static_cast<SpvOp>(126)},
        {"OpArbitraryFloatSqrtINTEL", static_cast<SpvOp>(5859)},
        {"OpEmitMeshTasksEXT", static_cast<SpvOp>(5294)},
        {"OpSUDot", static_cast<SpvOp>(4452)},
        {"OpArbitraryFloatPowNINTEL", static_cast<SpvOp>(5882)},
        {"OpAsmTargetINTEL", static_cast<SpvOp>(5609)},
        {"OpMatrixTimesScalar", static_cast<SpvOp>(143)},
        {"OpCopyMemorySized", static_cast<SpvOp>(64)},
        {"OpFunction", static_cast<SpvOp>(54)},
        {"OpRestoreMemoryINTEL", static_cast<SpvOp>(5820)},
        {"OpLoopMerge", static_cast<SpvOp>(246)},
        {"OpCompositeConstruct", static_cast<SpvOp>(80)},
        {"OpCommitWritePipe", static_cast<SpvOp>(281)},
        {"OpModuleProcessed", static_cast<SpvOp>(330)},
        {"OpGroupIMulKHR", static_cast<SpvOp>(6401)},
        {"OpHitObjectIsMissNV", static_cast<SpvOp>(5278)},
        {"OpInBoundsAccessChain", static_cast<SpvOp>(66)},
        {"OpFixedSinCosINTEL", static_cast<SpvOp>(5928)},
        {"OpVariable", static_cast<SpvOp>(59)},
        {"OpCooperativeMatrixMulAddKHR", static_cast<SpvOp>(4459)},
        {"OpUConvert", static_cast<SpvOp>(113)},
        {"OpIsNan", static_cast<SpvOp>(156)},
        {"OpGenericCastToPtr", static_cast<SpvOp>(122)},
        {"OpBitwiseXor", static_cast<SpvOp>(198)},
        {"OpGroupFAddNonUniformAMD", static_cast<SpvOp>(5001)},
        {"OpIAverageRoundedINTEL", static_cast<SpvOp>(5593)},
        {"OpSubgroupAvcMceConvertToImeResultINTEL", static_cast<SpvOp>(5733)},
        {"OpGroupIAdd", static_cast<SpvOp>(264)},
        {"OpSubgroupShuffleINTEL", static_cast<SpvOp>(5571)},
        {"OpHitObjectGetInstanceIdNV", static_cast<SpvOp>(5270)},
        {"OpIAddCarry", static_cast<SpvOp>(149)},
        {"OpSelectionMerge", static_cast<SpvOp>(247)},
        {"OpEmitStreamVertex", static_cast<SpvOp>(220)},
        {"OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL", static_cast<SpvOp>(5755)},
        {"OpGroupNonUniformUMax", static_cast<SpvOp>(357)},
        {"OpTypeVector", static_cast<SpvOp>(23)},
        {"OpGetNumPipePackets", static_cast<SpvOp>(283)},
        {"OpAbsISubINTEL", static_cast<SpvOp>(5587)},
        {"OpImageSparseGather", static_cast<SpvOp>(314)},
        {"OpImageWrite", static_cast<SpvOp>(99)},
        {"OpUnordered", static_cast<SpvOp>(163)},
        {"OpRayQueryGetIntersectionWorldToObjectKHR", static_cast<SpvOp>(6032)},
        {"OpImageQueryLevels", static_cast<SpvOp>(106)},
        {"OpReleaseEvent", static_cast<SpvOp>(298)},
        {"OpEndStreamPrimitive", static_cast<SpvOp>(221)},
        {"OpSubgroupAvcImeEvaluateWithDualReferenceINTEL", static_cast<SpvOp>(5758)},
        {"OpFragmentFetchAMD", static_cast<SpvOp>(5012)},
        {"OpImageSparseRead", static_cast<SpvOp>(320)},
        {"OpFixedSqrtINTEL", static_cast<SpvOp>(5923)},
        {"OpFixedSinCosPiINTEL", static_cast<SpvOp>(5931)},
        {"OpSubgroupAvcMceSetAcOnlyHaarINTEL", static_cast<SpvOp>(5728)},
        {"OpHitObjectGetRayTMaxNV", static_cast<SpvOp>(5274)},
        {"OpTypeVoid", static_cast<SpvOp>(19)},
        {"OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL", static_cast<SpvOp>(5774)},
        {"OpAtomicExchange", static_cast<SpvOp>(229)},
        {"OpExtension", static_cast<SpvOp>(10)},
        {"OpQuantizeToF16", static_cast<SpvOp>(116)},
        {"OpHitObjectGetCurrentTimeNV", static_cast<SpvOp>(5265)},
        {"OpGroupNonUniformLogicalXor", static_cast<SpvOp>(364)},
        {"OpTypeCooperativeMatrixNV", static_cast<SpvOp>(5358)},
        {"OpRayQueryGetIntersectionBarycentricsKHR", static_cast<SpvOp>(6024)},
        {"OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL", static_cast<SpvOp>(5715)},
        {"OpAtomicUMax", static_cast<SpvOp>(239)},
        {"OpAtomicIIncrement", static_cast<SpvOp>(232)},
        {"OpFUnordGreaterThanEqual", static_cast<SpvOp>(191)},
        {"OpCopyLogical", static_cast<SpvOp>(400)},
        {"OpConstantPipeStorage", static_cast<SpvOp>(323)},
        {"OpConvertSamplerToUNV", static_cast<SpvOp>(5394)},
        {"OpAtomicUMin", static_cast<SpvOp>(237)},
        {"OpConvertImageToUNV", static_cast<SpvOp>(5393)},
        {"OpGroupNonUniformIMul", static_cast<SpvOp>(351)},
        {"OpSubgroupAvcSicGetInterRawSadsINTEL", static_cast<SpvOp>(5816)},
        {"OpLessOrGreater", static_cast<SpvOp>(161)},
        {"OpFixedCosINTEL", static_cast<SpvOp>(5927)},
        {"OpArbitraryFloatLog1pINTEL", static_cast<SpvOp>(5863)},
        {"OpRayQueryGetIntersectionPrimitiveIndexKHR", static_cast<SpvOp>(6023)},
        {"OpSubgroupAvcMceGetInterDirectionsINTEL", static_cast<SpvOp>(5743)},
        {"OpImageTexelPointer", static_cast<SpvOp>(60)},
        {"OpSubgroupAvcMceGetInterReferenceIdsINTEL", static_cast<SpvOp>(5745)},
        {"OpUMul32x16INTEL", static_cast<SpvOp>(5598)},
        {"OpReservedReadPipe", static_cast<SpvOp>(276)},
        {"OpLogicalEqual", static_cast<SpvOp>(164)},
        {"OpAtomicCompareExchange", static_cast<SpvOp>(230)},
        {"OpUCountLeadingZerosINTEL", static_cast<SpvOp>(5585)},
        {"OpSubgroupAvcSicInitializeINTEL", static_cast<SpvOp>(5791)},
        {"OpImageSparseTexelsResident", static_cast<SpvOp>(316)},
        {"OpLogicalAnd", static_cast<SpvOp>(167)},
        {"OpSLessThanEqual", static_cast<SpvOp>(179)},
        {"OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL", static_cast<SpvOp>(5761)},
        {"OpNot", static_cast<SpvOp>(200)},
        {"OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL", static_cast<SpvOp>(5806)},
        {"OpSubgroupAvcSicConfigureIpeLumaINTEL", static_cast<SpvOp>(5793)},
        {"OpSatConvertSToU", static_cast<SpvOp>(118)},
        {"OpSubgroupAvcImeConvertToMceResultINTEL", static_cast<SpvOp>(5765)},
        {"OpSignBitSet", static_cast<SpvOp>(160)},
        {"OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL", static_cast<SpvOp>(5746)},
        {"OpImageSparseSampleDrefImplicitLod", static_cast<SpvOp>(307)},
        {"OpArbitraryFloatExp2INTEL", static_cast<SpvOp>(5865)},
        {"OpIgnoreIntersectionNV", static_cast<SpvOp>(5335)},
        {"OpUDotKHR", static_cast<SpvOp>(4451)},
        {"OpHitObjectGetShaderRecordBufferHandleNV", static_cast<SpvOp>(5257)},
        {"OpSubgroupShuffleUpINTEL", static_cast<SpvOp>(5573)},
        {"OpTranspose", static_cast<SpvOp>(84)},
        {"OpSGreaterThanEqual", static_cast<SpvOp>(175)},
        {"OpCooperativeMatrixMulAddNV", static_cast<SpvOp>(5361)},
        {"OpSDotKHR", static_cast<SpvOp>(4450)},
        {"OpTypeAvcSicPayloadINTEL", static_cast<SpvOp>(5703)},
        {"OpSubgroupAllKHR", static_cast<SpvOp>(4428)},
        {"OpAliasScopeDeclINTEL", static_cast<SpvOp>(5912)},
        {"OpCaptureEventProfilingInfo", static_cast<SpvOp>(302)},
        {"OpGroupNonUniformSMax", static_cast<SpvOp>(356)},
        {"OpGroupBitwiseOrKHR", static_cast<SpvOp>(6404)},
        {"OpSubgroupAvcImeConvertToMcePayloadINTEL", static_cast<SpvOp>(5752)},
        {"OpUAverageRoundedINTEL", static_cast<SpvOp>(5594)},
        {"OpSubgroupAvcSicConfigureIpeLumaChromaINTEL", static_cast<SpvOp>(5794)},
        {"OpTypeVmeImageINTEL", static_cast<SpvOp>(5700)},
        {"OpCreateUserEvent", static_cast<SpvOp>(299)},
        {"OpSubgroupShuffleXorINTEL", static_cast<SpvOp>(5574)},
        {"OpTypeEvent", static_cast<SpvOp>(34)},
        {"OpConvertUToSampledImageNV", static_cast<SpvOp>(5395)},
        {"OpImageSparseSampleProjDrefExplicitLod", static_cast<SpvOp>(312)},
        {"OpRetainEvent", static_cast<SpvOp>(297)},
        {"OpMatrixTimesMatrix", static_cast<SpvOp>(146)},
        {"OpLabel", static_cast<SpvOp>(248)},
        {"OpLogicalOr", static_cast<SpvOp>(166)},
        {"OpImageSampleProjDrefExplicitLod", static_cast<SpvOp>(94)},
        {"OpTraceNV", static_cast<SpvOp>(5337)},
        {"OpAll", static_cast<SpvOp>(155)},
        {"OpEndPrimitive", static_cast<SpvOp>(219)},
        {"OpSubgroupReadInvocationKHR", static_cast<SpvOp>(4432)},
        {"OpPtrEqual", static_cast<SpvOp>(401)},
        {"OpControlBarrierWaitINTEL", static_cast<SpvOp>(6143)},
        {"OpFixedExpINTEL", static_cast<SpvOp>(5933)},
        {"OpArbitraryFloatGEINTEL", static_cast<SpvOp>(5851)},
        {"OpTraceRayMotionNV", static_cast<SpvOp>(5339)},
        {"OpImageQueryLod", static_cast<SpvOp>(105)},
        {"OpTypeBufferSurfaceINTEL", static_cast<SpvOp>(6086)},
        {"OpFwidthFine", static_cast<SpvOp>(212)},
        {"OpWritePackedPrimitiveIndices4x8NV", static_cast<SpvOp>(5299)},
        {"OpArbitraryFloatMulINTEL", static_cast<SpvOp>(5848)},
        {"OpTypeStruct", static_cast<SpvOp>(30)},
        {"OpTypeReserveId", static_cast<SpvOp>(36)},
        {"OpISub", static_cast<SpvOp>(130)},
        {"OpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL", static_cast<SpvOp>(5723)},
        {"OpRayQueryGenerateIntersectionKHR", static_cast<SpvOp>(4475)},
        {"OpISubSatINTEL", static_cast<SpvOp>(5595)},
        {"OpMemoryBarrier", static_cast<SpvOp>(225)},
        {"OpCopyObject", static_cast<SpvOp>(83)},
        {"OpSubgroupImageBlockWriteINTEL", static_cast<SpvOp>(5578)},
        {"OpTypeAvcImeSingleReferenceStreaminINTEL", static_cast<SpvOp>(5709)},
        {"OpArbitraryFloatACosPiINTEL", static_cast<SpvOp>(5876)},
        {"OpEnqueueMarker", static_cast<SpvOp>(291)},
        {"OpDemoteToHelperInvocationEXT", static_cast<SpvOp>(5380)},
        {"OpAtomicStore", static_cast<SpvOp>(228)},
        {"OpTerminateRayKHR", static_cast<SpvOp>(4449)},
        {"OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL", static_cast<SpvOp>(5789)},
        {"OpArbitraryFloatASinINTEL", static_cast<SpvOp>(5873)},
        {"OpArbitraryFloatATanPiINTEL", static_cast<SpvOp>(5878)},
        {"OpCooperativeMatrixLengthNV", static_cast<SpvOp>(5362)},
        {"OpDPdxFine", static_cast<SpvOp>(210)},
        {"OpHitObjectGetObjectRayOriginNV", static_cast<SpvOp>(5255)},
        {"OpGroupUMin", static_cast<SpvOp>(267)},
        {"OpHitObjectRecordEmptyNV", static_cast<SpvOp>(5259)},
        {"OpGroupAny", static_cast<SpvOp>(262)},
        {"OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL", static_cast<SpvOp>(5772)},
        {"OpConvertSampledImageToUNV", static_cast<SpvOp>(5396)},
        {"OpImageSampleImplicitLod", static_cast<SpvOp>(87)},
        {"OpHitObjectGetObjectRayDirectionNV", static_cast<SpvOp>(5254)},
        {"OpImageQueryOrder", static_cast<SpvOp>(102)},
        {"OpImageSparseSampleExplicitLod", static_cast<SpvOp>(306)},
        {"OpSDot", static_cast<SpvOp>(4450)},
        {"OpSubgroupAvcMceConvertToSicPayloadINTEL", static_cast<SpvOp>(5736)},
        {"OpMemberName", static_cast<SpvOp>(6)},
        {"OpGroupNonUniformSMin", static_cast<SpvOp>(353)},
        {"OpReportIntersectionKHR", static_cast<SpvOp>(5334)},
        {"OpSubgroupAvcSicEvaluateIpeINTEL", static_cast<SpvOp>(5803)},
        {"OpSizeOf", static_cast<SpvOp>(321)},
        {"OpImageGather", static_cast<SpvOp>(96)},
        {"OpRayQueryGetIntersectionGeometryIndexKHR", static_cast<SpvOp>(6022)},
        {"OpHitObjectGetPrimitiveIndexNV", static_cast<SpvOp>(5268)},
        {"OpIsValidReserveId", static_cast<SpvOp>(282)},
        {"OpReadPipe", static_cast<SpvOp>(274)},
        {"OpHitObjectGetRayTMinNV", static_cast<SpvOp>(5275)},
        {"OpRayQueryGetIntersectionTKHR", static_cast<SpvOp>(6018)},
        {"OpTypeQueue", static_cast<SpvOp>(37)},
        {"OpGroupSMax", static_cast<SpvOp>(271)},
        {"OpSubgroupAvcRefSetBilinearFilterEnableINTEL", static_cast<SpvOp>(5785)},
        {"OpSubgroupAvcImeSetMaxMotionVectorCountINTEL", static_cast<SpvOp>(5753)},
        {"OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL", static_cast<SpvOp>(5807)},
        {"OpImageSparseSampleDrefExplicitLod", static_cast<SpvOp>(308)},
        {"OpRayQueryTerminateKHR", static_cast<SpvOp>(4474)},
        {"OpBitcast", static_cast<SpvOp>(124)},
        {"OpTypeAvcImeDualReferenceStreaminINTEL", static_cast<SpvOp>(5710)},
        {"OpExecuteCallableNV", static_cast<SpvOp>(5344)},
        {"OpImageBoxFilterQCOM", static_cast<SpvOp>(4481)},
        {"OpGroupWaitEvents", static_cast<SpvOp>(260)},
        {"OpSubgroupBallotKHR", static_cast<SpvOp>(4421)},
        {"OpGroupNonUniformShuffleUp", static_cast<SpvOp>(347)},
        {"OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL", static_cast<SpvOp>(5762)},
        {"OpSubgroupAvcImeGetBorderReachedINTEL", static_cast<SpvOp>(5776)},
        {"OpBitFieldInsert", static_cast<SpvOp>(201)},
        {"OpRayQueryGetIntersectionObjectRayDirectionKHR", static_cast<SpvOp>(6027)},
        {"OpImageSparseDrefGather", static_cast<SpvOp>(315)},
        {"OpGroupFMaxNonUniformAMD", static_cast<SpvOp>(5005)},
        {"OpAtomicAnd", static_cast<SpvOp>(240)},
        {"OpTypeAvcImeResultINTEL", static_cast<SpvOp>(5706)},
        {"OpGroupNonUniformBitwiseOr", static_cast<SpvOp>(360)},
        {"OpBitwiseOr", static_cast<SpvOp>(197)},
        {"OpDemoteToHelperInvocation", static_cast<SpvOp>(5380)},
        {"OpSubgroupAvcBmeInitializeINTEL", static_cast<SpvOp>(5782)},
        {"OpFunctionEnd", static_cast<SpvOp>(56)},
        {"OpFOrdGreaterThan", static_cast<SpvOp>(186)},
        {"OpImage", static_cast<SpvOp>(100)},
        {"OpHitObjectRecordHitWithIndexMotionNV", static_cast<SpvOp>(5250)},
        {"OpArbitraryFloatLog2INTEL", static_cast<SpvOp>(5861)},
        {"OpUMulExtended", static_cast<SpvOp>(151)},
        {"OpGroupReserveReadPipePackets", static_cast<SpvOp>(285)},
        {"OpHitObjectIsHitNV", static_cast<SpvOp>(5277)},
        {"OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL", static_cast<SpvOp>(5815)},
        {"OpSMod", static_cast<SpvOp>(139)},
        {"OpRayQueryGetRayFlagsKHR", static_cast<SpvOp>(6017)},
        {"OpAtomicIDecrement", static_cast<SpvOp>(233)},
        {"OpSubgroupAvcFmeInitializeINTEL", static_cast<SpvOp>(5781)},
        {"OpGetMaxPipePackets", static_cast<SpvOp>(284)},
        {"OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL", static_cast<SpvOp>(5799)},
        {"OpReturn", static_cast<SpvOp>(253)},
        {"OpSamplerImageAddressingModeNV", static_cast<SpvOp>(5397)},
        {"OpUDot", static_cast<SpvOp>(4451)},
        {"OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL", static_cast<SpvOp>(5719)},
        {"OpExtInstImport", static_cast<SpvOp>(11)},
        {"OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL", static_cast<SpvOp>(5764)},
        {"OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL", static_cast<SpvOp>(5773)},
        {"OpFSub", static_cast<SpvOp>(131)},
        {"OpAny", static_cast<SpvOp>(154)},
        {"OpSubgroupAvcImeRefWindowSizeINTEL", static_cast<SpvOp>(5750)},
        {"OpGroupLogicalXorKHR", static_cast<SpvOp>(6408)},
        {"OpDPdy", static_cast<SpvOp>(208)},
        {"OpGroupSMin", static_cast<SpvOp>(268)},
        {"OpCooperativeMatrixStoreKHR", static_cast<SpvOp>(4458)},
        {"OpRayQueryInitializeKHR", static_cast<SpvOp>(4473)},
        {"OpVectorExtractDynamic", static_cast<SpvOp>(77)},
        {"OpShiftRightLogical", static_cast<SpvOp>(194)},
        {"OpSubgroupAvcImeGetSingleReferenceStreaminINTEL", static_cast<SpvOp>(5766)},
        {"OpAtomicISub", static_cast<SpvOp>(235)},
        {"OpGroupFMulKHR", static_cast<SpvOp>(6402)},
        {"OpUDiv", static_cast<SpvOp>(134)},
        {"OpConstantFunctionPointerINTEL", static_cast<SpvOp>(5600)},
        {"OpGroupNonUniformBroadcastFirst", static_cast<SpvOp>(338)},
        {"OpGroupBroadcast", static_cast<SpvOp>(263)},
        {"OpSpecConstantFalse", static_cast<SpvOp>(49)},
        {"OpGroupNonUniformLogicalAnd", static_cast<SpvOp>(362)},
        {"OpSubgroupAvcMceGetMotionVectorsINTEL", static_cast<SpvOp>(5738)},
        {"OpGroupNonUniformBallot", static_cast<SpvOp>(339)},
        {"OpSubgroupAvcMceConvertToSicResultINTEL", static_cast<SpvOp>(5737)},
        {"OpArbitraryFloatSubINTEL", static_cast<SpvOp>(5847)},
        {"OpAtomicFMinEXT", static_cast<SpvOp>(5614)},
        {"OpBranchConditional", static_cast<SpvOp>(250)},
        {"OpTypeSampledImage", static_cast<SpvOp>(27)},
        {"OpFPGARegINTEL", static_cast<SpvOp>(5949)},
        {"OpBeginInvocationInterlockEXT", static_cast<SpvOp>(5364)},
        {"OpGroupNonUniformBroadcast", static_cast<SpvOp>(337)},
        {"OpAtomicFlagTestAndSet", static_cast<SpvOp>(318)},
        {"OpPtrAccessChain", static_cast<SpvOp>(67)},
        {"OpTypeSampler", static_cast<SpvOp>(26)},
        {"OpImageSampleDrefImplicitLod", static_cast<SpvOp>(89)},
        {"OpShiftRightArithmetic", static_cast<SpvOp>(195)},
        {"OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL", static_cast<SpvOp>(5788)},
        {"OpMemberDecorate", static_cast<SpvOp>(72)},
        {"OpMemoryModel", static_cast<SpvOp>(14)},
        {"OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL", static_cast<SpvOp>(5779)},
        {"OpSubgroupAvcMceGetInterDistortionsINTEL", static_cast<SpvOp>(5739)},
        {"OpNop", static_cast<SpvOp>(0)},
        {"OpDPdyCoarse", static_cast<SpvOp>(214)},
        {"OpArbitraryFloatEQINTEL", static_cast<SpvOp>(5854)},
        {"OpReturnValue", static_cast<SpvOp>(254)},
        {"OpGroupNonUniformElect", static_cast<SpvOp>(333)},
        {"OpSubgroupAvcImeStripDualReferenceStreamoutINTEL", static_cast<SpvOp>(5769)},
        {"OpTypeFloat", static_cast<SpvOp>(22)},
        {"OpGroupBitwiseAndKHR", static_cast<SpvOp>(6403)},
        {"OpTypePointer", static_cast<SpvOp>(32)},
        {"OpMatrixTimesVector", static_cast<SpvOp>(145)},
        {"OpAccessChain", static_cast<SpvOp>(65)},
        {"OpCapability", static_cast<SpvOp>(17)},
        {"OpTypeNamedBarrier", static_cast<SpvOp>(327)},
        {"OpConvertBF16ToFINTEL", static_cast<SpvOp>(6117)},
        {"OpAtomicSMax", static_cast<SpvOp>(238)},
        {"OpImageSparseSampleProjDrefImplicitLod", static_cast<SpvOp>(311)},
        {"OpStencilAttachmentReadEXT", static_cast<SpvOp>(4162)},
        {"OpConvertFToU", static_cast<SpvOp>(109)},
        {"OpSubgroupAvcRefConvertToMcePayloadINTEL", static_cast<SpvOp>(5783)},
        {"OpReserveWritePipePackets", static_cast<SpvOp>(279)},
        {"OpRayQueryGetRayTMinKHR", static_cast<SpvOp>(6016)},
        {"OpIMul32x16INTEL", static_cast<SpvOp>(5597)},
        {"OpGetDefaultQueue", static_cast<SpvOp>(303)},
        {"OpReserveReadPipePackets", static_cast<SpvOp>(278)},
        {"OpGetKernelPreferredWorkGroupSizeMultiple", static_cast<SpvOp>(296)},
        {"OpSpecConstant", static_cast<SpvOp>(50)},
        {"OpAtomicIAdd", static_cast<SpvOp>(234)},
        {"OpSubgroupAvcSicConfigureSkcINTEL", static_cast<SpvOp>(5792)},
        {"OpSaveMemoryINTEL", static_cast<SpvOp>(5819)},
        {"OpSubgroupAvcImeInitializeINTEL", static_cast<SpvOp>(5747)},
        {"OpFixedCosPiINTEL", static_cast<SpvOp>(5930)},
        {"OpAtomicLoad", static_cast<SpvOp>(227)},
        {"OpTypeForwardPointer", static_cast<SpvOp>(39)},
        {"OpTypeAccelerationStructureNV", static_cast<SpvOp>(5341)},
        {"OpUDotAccSatKHR", static_cast<SpvOp>(4454)},
        {"OpSubgroupFirstInvocationKHR", static_cast<SpvOp>(4422)},
        {"OpDPdyFine", static_cast<SpvOp>(211)},
        {"OpConvertUToSamplerNV", static_cast<SpvOp>(5392)},
        {"OpArbitraryFloatATanINTEL", static_cast<SpvOp>(5877)},
        {"OpTerminateInvocation", static_cast<SpvOp>(4416)},
        {"OpUAddSatINTEL", static_cast<SpvOp>(5590)},
        {"OpLoopControlINTEL", static_cast<SpvOp>(5887)},
        {"OpGroupLogicalOrKHR", static_cast<SpvOp>(6407)},
        {"OpArbitraryFloatPowRINTEL", static_cast<SpvOp>(5881)},
        {"OpRayQueryGetIntersectionTriangleVertexPositionsKHR", static_cast<SpvOp>(5340)},
        {"OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL", static_cast<SpvOp>(5775)},
        {"OpSubgroupAllEqualKHR", static_cast<SpvOp>(4430)},
        {"OpSubgroupBlockReadINTEL", static_cast<SpvOp>(5575)},
        {"OpImageSampleProjExplicitLod", static_cast<SpvOp>(92)},
        {"OpPhi", static_cast<SpvOp>(245)},
        {"OpReadPipeBlockingINTEL", static_cast<SpvOp>(5946)},
        {"OpDPdx", static_cast<SpvOp>(207)},
        {"OpSubgroupAvcMceSetInterShapePenaltyINTEL", static_cast<SpvOp>(5716)},
        {"OpGroupUMaxNonUniformAMD", static_cast<SpvOp>(5006)},
        {"OpTypeMatrix", static_cast<SpvOp>(24)},
        {"OpMemberDecorateStringGOOGLE", static_cast<SpvOp>(5633)},
        {"OpGroupNonUniformShuffleDown", static_cast<SpvOp>(348)},
        {"OpConvertUToAccelerationStructureKHR", static_cast<SpvOp>(4447)},
        {"OpName", static_cast<SpvOp>(5)},
        {"OpSDiv", static_cast<SpvOp>(135)},
        {"OpSubgroupAvcMceGetInterMajorShapeINTEL", static_cast<SpvOp>(5741)},
        {"OpReorderThreadWithHintNV", static_cast<SpvOp>(5280)},
        {"OpArbitraryFloatHypotINTEL", static_cast<SpvOp>(5858)},
        {"OpTypeAccelerationStructureKHR", static_cast<SpvOp>(5341)},
        {"OpImageRead", static_cast<SpvOp>(98)},
        {"OpGroupSMinNonUniformAMD", static_cast<SpvOp>(5004)},
        {"OpPtrCastToGeneric", static_cast<SpvOp>(121)},
        {"OpTypeHitObjectNV", static_cast<SpvOp>(5281)},
        {"OpLogicalNotEqual", static_cast<SpvOp>(165)},
        {"OpConvertUToImageNV", static_cast<SpvOp>(5391)},
        {"OpBitReverse", static_cast<SpvOp>(204)},
        {"OpAsmINTEL", static_cast<SpvOp>(5610)},
        {"OpHitObjectRecordMissNV", static_cast<SpvOp>(5263)},
        {"OpIAdd", static_cast<SpvOp>(128)},
        {"OpSubgroupAvcSicSetBilinearFilterEnableINTEL", static_cast<SpvOp>(5800)},
        {"OpImageBlockMatchSSDQCOM", static_cast<SpvOp>(4482)},
        {"OpTypeFunction", static_cast<SpvOp>(33)},
        {"OpSMulExtended", static_cast<SpvOp>(152)},
        {"OpConstantTrue", static_cast<SpvOp>(41)},
        {"OpSubgroupAvcSicGetIpeChromaModeINTEL", static_cast<SpvOp>(5813)},
        {"OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL", static_cast<SpvOp>(5814)},
        {"OpCreatePipeFromPipeStorage", static_cast<SpvOp>(324)},
        {"OpImageSparseSampleProjImplicitLod", static_cast<SpvOp>(309)},
        {"OpExtInst", static_cast<SpvOp>(12)},
        {"OpHitObjectRecordHitMotionNV", static_cast<SpvOp>(5249)},
        {"OpReportIntersectionNV", static_cast<SpvOp>(5334)},
        {"OpArbitraryFloatCastINTEL", static_cast<SpvOp>(5841)},
        {"OpGroupFMax", static_cast<SpvOp>(269)},
        {"OpSubgroupAvcMceConvertToRefResultINTEL", static_cast<SpvOp>(5735)},
        {"OpCrossWorkgroupCastToPtrINTEL", static_cast<SpvOp>(5938)},
        {"OpConstantSampler", static_cast<SpvOp>(45)},
        {"OpTypeOpaque", static_cast<SpvOp>(31)},
        {"OpDepthAttachmentReadEXT", static_cast<SpvOp>(4161)},
        {"OpHitObjectRecordHitNV", static_cast<SpvOp>(5261)},
        {"OpSRem", static_cast<SpvOp>(138)},
        {"OpAliasDomainDeclINTEL", static_cast<SpvOp>(5911)},
        {"OpTerminateRayNV", static_cast<SpvOp>(5336)},
        {"OpRayQueryProceedKHR", static_cast<SpvOp>(4477)},
        {"OpFOrdLessThan", static_cast<SpvOp>(184)},
        {"OpIsInf", static_cast<SpvOp>(157)},
        {"OpDecorateStringGOOGLE", static_cast<SpvOp>(5632)},
        {"OpHitObjectGetWorldRayOriginNV", static_cast<SpvOp>(5273)},
        {"OpImageSampleProjDrefImplicitLod", static_cast<SpvOp>(93)},
        {"OpArbitraryFloatExp10INTEL", static_cast<SpvOp>(5866)},
        {"OpColorAttachmentReadEXT", static_cast<SpvOp>(4160)},
        {"OpLoad", static_cast<SpvOp>(61)},
        {"OpArbitraryFloatSinPiINTEL", static_cast<SpvOp>(5871)},
        {"OpOrdered", static_cast<SpvOp>(162)},
        {"OpSubgroupAnyKHR", static_cast<SpvOp>(4429)},
        {"OpConvertUToPtr", static_cast<SpvOp>(120)},
        {"OpFixedSinPiINTEL", static_cast<SpvOp>(5929)},
        {"OpTypePipe", static_cast<SpvOp>(38)},
        {"OpImageQuerySamples", static_cast<SpvOp>(107)},
        {"OpTypeBool", static_cast<SpvOp>(20)},
        {"OpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL", static_cast<SpvOp>(5722)},
        {"OpGroupNonUniformShuffleXor", static_cast<SpvOp>(346)},
        {"OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL", static_cast<SpvOp>(5786)},
        {"OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL", static_cast<SpvOp>(5804)},
        {"OpFOrdGreaterThanEqual", static_cast<SpvOp>(190)},
        {"OpConstantFalse", static_cast<SpvOp>(42)},
        {"OpSubgroupAvcImeAdjustRefOffsetINTEL", static_cast<SpvOp>(5751)},
        {"OpFOrdLessThanEqual", static_cast<SpvOp>(188)},
        {"OpConvertSToF", static_cast<SpvOp>(111)},
        {"OpArbitraryFloatATan2INTEL", static_cast<SpvOp>(5879)},
        {"OpSUDotKHR", static_cast<SpvOp>(4452)},
        {"OpDot", static_cast<SpvOp>(148)},
        {"OpGroupNonUniformAllEqual", static_cast<SpvOp>(336)},
        {"OpArbitraryFloatExpm1INTEL", static_cast<SpvOp>(5867)},
        {"OpWritePipeBlockingINTEL", static_cast<SpvOp>(5947)},
        {"OpArbitraryFloatAddINTEL", static_cast<SpvOp>(5846)},
        {"OpImageSampleDrefExplicitLod", static_cast<SpvOp>(90)},
    };

    static const auto hash = [](const UnownedStringSlice& str, UInt32 salt){
        return combineHash(getHashCode(str), getHashCode(salt)) % 718;
    };

    const auto i = hash(str, tableSalt[hash(str, 0)]);
    if(str == words[i].first)
    {
        value = words[i].second;
        return true;
    }
    else
    {
        return false;
    }
}

bool lookupSpvCapability(const UnownedStringSlice& str, SpvCapability& value)
{
    static const unsigned tableSalt[245] = {
        0, 4, 0, 0, 1, 0, 4, 0, 4, 7, 2, 0, 0, 0, 0, 1,
        2, 6, 0, 1, 4, 0, 0, 1, 1, 1, 0, 1, 0, 0, 4, 1,
        1, 1, 0, 0, 3, 0, 1, 1, 0, 0, 7, 1, 1, 2, 6, 7,
        3, 0, 4, 0, 0, 1, 0, 0, 6, 2, 0, 0, 3, 0, 0, 0,
        0, 3, 0, 0, 1, 12, 0, 1, 2, 0, 6, 2, 0, 1, 5, 1,
        5, 1, 0, 6, 12, 0, 5, 9, 2, 11, 0, 0, 3, 2, 1, 0,
        6, 0, 1, 1, 1, 3, 1, 0, 0, 0, 1, 5, 2, 1, 0, 9,
        3, 3, 0, 1, 1, 0, 6, 0, 0, 0, 1, 0, 2, 3, 0, 1,
        2, 2, 6, 4, 2, 0, 3, 2, 5, 7, 5, 3, 2, 2, 0, 1,
        1, 13, 13, 1, 0, 1, 0, 0, 0, 1, 0, 16, 2, 0, 4, 13,
        5, 1, 2, 3, 0, 10, 2, 8, 4, 0, 5, 1, 11, 6, 0, 7,
        18, 10, 0, 55, 4, 12, 0, 0, 0, 1, 5, 0, 13, 13, 0, 2,
        3, 0, 0, 0, 3, 1, 81, 1, 0, 0, 2, 23, 8, 0, 1, 11,
        0, 13, 5, 0, 52, 12, 0, 0, 2, 8, 0, 7, 0, 8, 15, 11,
        10, 72, 125, 0, 0, 36, 16, 1, 318, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 10, 10, 8
    };

    using KV = std::pair<const char*, SpvCapability>;

    static const KV words[245] =
    {
        {"UniformDecoration", static_cast<SpvCapability>(71)},
        {"ComputeDerivativeGroupLinearNV", static_cast<SpvCapability>(5350)},
        {"InputAttachmentArrayNonUniformIndexing", static_cast<SpvCapability>(5310)},
        {"DenormFlushToZero", static_cast<SpvCapability>(4465)},
        {"Shader", static_cast<SpvCapability>(1)},
        {"AsmINTEL", static_cast<SpvCapability>(5606)},
        {"ArbitraryPrecisionIntegersINTEL", static_cast<SpvCapability>(5844)},
        {"VulkanMemoryModel", static_cast<SpvCapability>(5345)},
        {"SampledCubeArray", static_cast<SpvCapability>(45)},
        {"SubgroupDispatch", static_cast<SpvCapability>(58)},
        {"ShaderClockKHR", static_cast<SpvCapability>(5055)},
        {"Image1D", static_cast<SpvCapability>(44)},
        {"UniformBufferArrayNonUniformIndexing", static_cast<SpvCapability>(5306)},
        {"UniformTexelBufferArrayDynamicIndexing", static_cast<SpvCapability>(5304)},
        {"VulkanMemoryModelDeviceScope", static_cast<SpvCapability>(5346)},
        {"FPFastMathModeINTEL", static_cast<SpvCapability>(5837)},
        {"GroupNonUniformRotateKHR", static_cast<SpvCapability>(6026)},
        {"DerivativeControl", static_cast<SpvCapability>(51)},
        {"AtomicStorageOps", static_cast<SpvCapability>(4445)},
        {"ImageRect", static_cast<SpvCapability>(36)},
        {"GroupNonUniformShuffle", static_cast<SpvCapability>(65)},
        {"Linkage", static_cast<SpvCapability>(5)},
        {"SplitBarrierINTEL", static_cast<SpvCapability>(6141)},
        {"StorageBufferArrayNonUniformIndexing", static_cast<SpvCapability>(5308)},
        {"FPGALoopControlsINTEL", static_cast<SpvCapability>(5888)},
        {"InputAttachment", static_cast<SpvCapability>(40)},
        {"SignedZeroInfNanPreserve", static_cast<SpvCapability>(4466)},
        {"WorkgroupMemoryExplicitLayout8BitAccessKHR", static_cast<SpvCapability>(4429)},
        {"StorageBuffer8BitAccess", static_cast<SpvCapability>(4448)},
        {"RayTracingOpacityMicromapEXT", static_cast<SpvCapability>(5381)},
        {"ShaderStereoViewNV", static_cast<SpvCapability>(5259)},
        {"Sampled1D", static_cast<SpvCapability>(43)},
        {"Float16Buffer", static_cast<SpvCapability>(8)},
        {"FPGAClusterAttributesINTEL", static_cast<SpvCapability>(5904)},
        {"NamedBarrier", static_cast<SpvCapability>(59)},
        {"SubgroupAvcMotionEstimationIntraINTEL", static_cast<SpvCapability>(5697)},
        {"FPGALatencyControlINTEL", static_cast<SpvCapability>(6171)},
        {"ShadingRateNV", static_cast<SpvCapability>(5291)},
        {"StorageUniformBufferBlock16", static_cast<SpvCapability>(4433)},
        {"Float64", static_cast<SpvCapability>(10)},
        {"CooperativeMatrixNV", static_cast<SpvCapability>(5357)},
        {"ImageReadWriteLodAMD", static_cast<SpvCapability>(5015)},
        {"StorageBufferArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5308)},
        {"InterpolationFunction", static_cast<SpvCapability>(52)},
        {"FPMaxErrorINTEL", static_cast<SpvCapability>(6169)},
        {"PipeStorage", static_cast<SpvCapability>(60)},
        {"FragmentFullyCoveredEXT", static_cast<SpvCapability>(5265)},
        {"CoreBuiltinsARM", static_cast<SpvCapability>(4165)},
        {"DeviceEnqueue", static_cast<SpvCapability>(19)},
        {"AtomicFloat32AddEXT", static_cast<SpvCapability>(6033)},
        {"FPGAInvocationPipeliningAttributesINTEL", static_cast<SpvCapability>(5916)},
        {"StorageImageArrayNonUniformIndexing", static_cast<SpvCapability>(5309)},
        {"DotProduct", static_cast<SpvCapability>(6019)},
        {"RayTracingPositionFetchKHR", static_cast<SpvCapability>(5336)},
        {"ImageFootprintNV", static_cast<SpvCapability>(5282)},
        {"TileImageColorReadAccessEXT", static_cast<SpvCapability>(4166)},
        {"BindlessTextureNV", static_cast<SpvCapability>(5390)},
        {"DotProductInputAllKHR", static_cast<SpvCapability>(6016)},
        {"GroupNonUniformVote", static_cast<SpvCapability>(62)},
        {"FragmentBarycentricNV", static_cast<SpvCapability>(5284)},
        {"SampleMaskOverrideCoverageNV", static_cast<SpvCapability>(5249)},
        {"DemoteToHelperInvocationEXT", static_cast<SpvCapability>(5379)},
        {"SubgroupBufferBlockIOINTEL", static_cast<SpvCapability>(5569)},
        {"TextureSampleWeightedQCOM", static_cast<SpvCapability>(4484)},
        {"SampledImageArrayDynamicIndexing", static_cast<SpvCapability>(29)},
        {"StorageImageArrayDynamicIndexing", static_cast<SpvCapability>(31)},
        {"InputAttachmentArrayDynamicIndexing", static_cast<SpvCapability>(5303)},
        {"StorageTexelBufferArrayDynamicIndexingEXT", static_cast<SpvCapability>(5305)},
        {"GroupUniformArithmeticKHR", static_cast<SpvCapability>(6400)},
        {"FragmentShaderSampleInterlockEXT", static_cast<SpvCapability>(5363)},
        {"MinLod", static_cast<SpvCapability>(42)},
        {"GroupNonUniform", static_cast<SpvCapability>(61)},
        {"Matrix", static_cast<SpvCapability>(0)},
        {"VariablePointersStorageBuffer", static_cast<SpvCapability>(4441)},
        {"SampledImageArrayNonUniformIndexing", static_cast<SpvCapability>(5307)},
        {"StorageImageExtendedFormats", static_cast<SpvCapability>(49)},
        {"VariablePointers", static_cast<SpvCapability>(4442)},
        {"RayTracingProvisionalKHR", static_cast<SpvCapability>(5353)},
        {"GeometryShaderPassthroughNV", static_cast<SpvCapability>(5251)},
        {"DrawParameters", static_cast<SpvCapability>(4427)},
        {"TessellationPointSize", static_cast<SpvCapability>(23)},
        {"TextureBlockMatchQCOM", static_cast<SpvCapability>(4486)},
        {"WorkgroupMemoryExplicitLayout16BitAccessKHR", static_cast<SpvCapability>(4430)},
        {"SubgroupImageMediaBlockIOINTEL", static_cast<SpvCapability>(5579)},
        {"GroupNonUniformArithmetic", static_cast<SpvCapability>(63)},
        {"AtomicStorage", static_cast<SpvCapability>(21)},
        {"FPGAKernelAttributesINTEL", static_cast<SpvCapability>(5897)},
        {"RuntimeDescriptorArray", static_cast<SpvCapability>(5302)},
        {"CooperativeMatrixKHR", static_cast<SpvCapability>(6022)},
        {"Int64", static_cast<SpvCapability>(11)},
        {"UniformTexelBufferArrayDynamicIndexingEXT", static_cast<SpvCapability>(5304)},
        {"FragmentShadingRateKHR", static_cast<SpvCapability>(4422)},
        {"UniformAndStorageBuffer8BitAccess", static_cast<SpvCapability>(4449)},
        {"UniformTexelBufferArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5311)},
        {"RoundingModeRTE", static_cast<SpvCapability>(4467)},
        {"UniformBufferArrayDynamicIndexing", static_cast<SpvCapability>(28)},
        {"Int8", static_cast<SpvCapability>(39)},
        {"VulkanMemoryModelDeviceScopeKHR", static_cast<SpvCapability>(5346)},
        {"LiteralSampler", static_cast<SpvCapability>(20)},
        {"IndirectReferencesINTEL", static_cast<SpvCapability>(5604)},
        {"USMStorageClassesINTEL", static_cast<SpvCapability>(5935)},
        {"Vector16", static_cast<SpvCapability>(7)},
        {"IOPipesINTEL", static_cast<SpvCapability>(5943)},
        {"VectorComputeINTEL", static_cast<SpvCapability>(5617)},
        {"StoragePushConstant16", static_cast<SpvCapability>(4435)},
        {"GroupNonUniformShuffleRelative", static_cast<SpvCapability>(66)},
        {"ShaderNonUniform", static_cast<SpvCapability>(5301)},
        {"CullDistance", static_cast<SpvCapability>(33)},
        {"ShaderViewportIndexLayerNV", static_cast<SpvCapability>(5254)},
        {"GeometryStreams", static_cast<SpvCapability>(54)},
        {"DotProductInputAll", static_cast<SpvCapability>(6016)},
        {"GenericPointer", static_cast<SpvCapability>(38)},
        {"DotProductInput4x8BitPackedKHR", static_cast<SpvCapability>(6018)},
        {"PhysicalStorageBufferAddresses", static_cast<SpvCapability>(5347)},
        {"FragmentMaskAMD", static_cast<SpvCapability>(5010)},
        {"SubgroupVoteKHR", static_cast<SpvCapability>(4431)},
        {"RuntimeAlignedAttributeINTEL", static_cast<SpvCapability>(5939)},
        {"TileImageStencilReadAccessEXT", static_cast<SpvCapability>(4168)},
        {"SubgroupAvcMotionEstimationChromaINTEL", static_cast<SpvCapability>(5698)},
        {"StorageBuffer16BitAccess", static_cast<SpvCapability>(4433)},
        {"RayTracingMotionBlurNV", static_cast<SpvCapability>(5341)},
        {"BFloat16ConversionINTEL", static_cast<SpvCapability>(6115)},
        {"FPGAArgumentInterfacesINTEL", static_cast<SpvCapability>(6174)},
        {"RayQueryProvisionalKHR", static_cast<SpvCapability>(4471)},
        {"FPGAKernelAttributesv2INTEL", static_cast<SpvCapability>(6161)},
        {"Addresses", static_cast<SpvCapability>(4)},
        {"UniformTexelBufferArrayNonUniformIndexing", static_cast<SpvCapability>(5311)},
        {"AtomicFloat64MinMaxEXT", static_cast<SpvCapability>(5613)},
        {"SampledBuffer", static_cast<SpvCapability>(46)},
        {"DebugInfoModuleINTEL", static_cast<SpvCapability>(6114)},
        {"Geometry", static_cast<SpvCapability>(2)},
        {"LongConstantCompositeINTEL", static_cast<SpvCapability>(6089)},
        {"FragmentShaderPixelInterlockEXT", static_cast<SpvCapability>(5378)},
        {"VulkanMemoryModelKHR", static_cast<SpvCapability>(5345)},
        {"ShaderViewportIndex", static_cast<SpvCapability>(70)},
        {"DotProductKHR", static_cast<SpvCapability>(6019)},
        {"Groups", static_cast<SpvCapability>(18)},
        {"UniformAndStorageBuffer16BitAccess", static_cast<SpvCapability>(4434)},
        {"VectorAnyINTEL", static_cast<SpvCapability>(5619)},
        {"InputAttachmentArrayDynamicIndexingEXT", static_cast<SpvCapability>(5303)},
        {"Float16ImageAMD", static_cast<SpvCapability>(5008)},
        {"ShaderViewportIndexLayerEXT", static_cast<SpvCapability>(5254)},
        {"ImageGatherExtended", static_cast<SpvCapability>(25)},
        {"SampleMaskPostDepthCoverage", static_cast<SpvCapability>(4447)},
        {"FragmentBarycentricKHR", static_cast<SpvCapability>(5284)},
        {"TextureBoxFilterQCOM", static_cast<SpvCapability>(4485)},
        {"ShaderSMBuiltinsNV", static_cast<SpvCapability>(5373)},
        {"ImageReadWrite", static_cast<SpvCapability>(14)},
        {"StorageImageMultisample", static_cast<SpvCapability>(27)},
        {"ArbitraryPrecisionFixedPointINTEL", static_cast<SpvCapability>(5922)},
        {"ComputeDerivativeGroupQuadsNV", static_cast<SpvCapability>(5288)},
        {"IntegerFunctions2INTEL", static_cast<SpvCapability>(5584)},
        {"AtomicFloat32MinMaxEXT", static_cast<SpvCapability>(5612)},
        {"BitInstructions", static_cast<SpvCapability>(6025)},
        {"AtomicFloat16MinMaxEXT", static_cast<SpvCapability>(5616)},
        {"SubgroupShuffleINTEL", static_cast<SpvCapability>(5568)},
        {"GroupNonUniformPartitionedNV", static_cast<SpvCapability>(5297)},
        {"SampledRect", static_cast<SpvCapability>(37)},
        {"GroupNonUniformClustered", static_cast<SpvCapability>(67)},
        {"StorageImageReadWithoutFormat", static_cast<SpvCapability>(55)},
        {"ImageBasic", static_cast<SpvCapability>(13)},
        {"FPGARegINTEL", static_cast<SpvCapability>(5948)},
        {"SparseResidency", static_cast<SpvCapability>(41)},
        {"ImageGatherBiasLodAMD", static_cast<SpvCapability>(5009)},
        {"OptNoneINTEL", static_cast<SpvCapability>(6094)},
        {"ShaderLayer", static_cast<SpvCapability>(69)},
        {"StorageImageWriteWithoutFormat", static_cast<SpvCapability>(56)},
        {"Float16", static_cast<SpvCapability>(9)},
        {"FragmentShaderShadingRateInterlockEXT", static_cast<SpvCapability>(5372)},
        {"SubgroupImageBlockIOINTEL", static_cast<SpvCapability>(5570)},
        {"ShaderInvocationReorderNV", static_cast<SpvCapability>(5383)},
        {"PhysicalStorageBufferAddressesEXT", static_cast<SpvCapability>(5347)},
        {"UniformBufferArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5306)},
        {"ShaderViewportMaskNV", static_cast<SpvCapability>(5255)},
        {"DenormPreserve", static_cast<SpvCapability>(4464)},
        {"FPGADSPControlINTEL", static_cast<SpvCapability>(5908)},
        {"SampleRateShading", static_cast<SpvCapability>(35)},
        {"RoundingModeRTZ", static_cast<SpvCapability>(4468)},
        {"Kernel", static_cast<SpvCapability>(6)},
        {"FunctionPointersINTEL", static_cast<SpvCapability>(5603)},
        {"FloatingPointModeINTEL", static_cast<SpvCapability>(5583)},
        {"StorageInputOutput16", static_cast<SpvCapability>(4436)},
        {"AtomicFloat16AddEXT", static_cast<SpvCapability>(6095)},
        {"ImageCubeArray", static_cast<SpvCapability>(34)},
        {"DotProductInput4x8BitPacked", static_cast<SpvCapability>(6018)},
        {"ClipDistance", static_cast<SpvCapability>(32)},
        {"Int64Atomics", static_cast<SpvCapability>(12)},
        {"MultiViewport", static_cast<SpvCapability>(57)},
        {"RayQueryPositionFetchKHR", static_cast<SpvCapability>(5391)},
        {"StencilExportEXT", static_cast<SpvCapability>(5013)},
        {"RuntimeDescriptorArrayEXT", static_cast<SpvCapability>(5302)},
        {"RoundToInfinityINTEL", static_cast<SpvCapability>(5582)},
        {"StorageTexelBufferArrayDynamicIndexing", static_cast<SpvCapability>(5305)},
        {"DotProductInput4x8Bit", static_cast<SpvCapability>(6017)},
        {"UnstructuredLoopControlsINTEL", static_cast<SpvCapability>(5886)},
        {"WorkgroupMemoryExplicitLayoutKHR", static_cast<SpvCapability>(4428)},
        {"TransformFeedback", static_cast<SpvCapability>(53)},
        {"Tessellation", static_cast<SpvCapability>(3)},
        {"SubgroupBallotKHR", static_cast<SpvCapability>(4423)},
        {"ImageMipmap", static_cast<SpvCapability>(15)},
        {"DeviceGroup", static_cast<SpvCapability>(4437)},
        {"Pipes", static_cast<SpvCapability>(17)},
        {"FunctionFloatControlINTEL", static_cast<SpvCapability>(5821)},
        {"RayCullMaskKHR", static_cast<SpvCapability>(6020)},
        {"SampledImageArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5307)},
        {"DemoteToHelperInvocation", static_cast<SpvCapability>(5379)},
        {"MeshShadingEXT", static_cast<SpvCapability>(5283)},
        {"RayTraversalPrimitiveCullingKHR", static_cast<SpvCapability>(4478)},
        {"GroupNonUniformQuad", static_cast<SpvCapability>(68)},
        {"FPGAMemoryAttributesINTEL", static_cast<SpvCapability>(5824)},
        {"GeometryPointSize", static_cast<SpvCapability>(24)},
        {"FPGAMemoryAccessesINTEL", static_cast<SpvCapability>(5898)},
        {"Int16", static_cast<SpvCapability>(22)},
        {"GroupNonUniformBallot", static_cast<SpvCapability>(64)},
        {"Int64ImageEXT", static_cast<SpvCapability>(5016)},
        {"PerViewAttributesNV", static_cast<SpvCapability>(5260)},
        {"ArbitraryPrecisionFloatingPointINTEL", static_cast<SpvCapability>(5845)},
        {"KernelAttributesINTEL", static_cast<SpvCapability>(5892)},
        {"AtomicFloat64AddEXT", static_cast<SpvCapability>(6034)},
        {"FPGABufferLocationINTEL", static_cast<SpvCapability>(5920)},
        {"StorageTexelBufferArrayNonUniformIndexing", static_cast<SpvCapability>(5312)},
        {"ImageBuffer", static_cast<SpvCapability>(47)},
        {"TileImageDepthReadAccessEXT", static_cast<SpvCapability>(4167)},
        {"ImageMSArray", static_cast<SpvCapability>(48)},
        {"StorageTexelBufferArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5312)},
        {"MultiView", static_cast<SpvCapability>(4439)},
        {"InputAttachmentArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5310)},
        {"ExpectAssumeKHR", static_cast<SpvCapability>(5629)},
        {"RayQueryKHR", static_cast<SpvCapability>(4472)},
        {"BlockingPipesINTEL", static_cast<SpvCapability>(5945)},
        {"StorageBufferArrayDynamicIndexing", static_cast<SpvCapability>(30)},
        {"MemoryAccessAliasingINTEL", static_cast<SpvCapability>(5910)},
        {"MeshShadingNV", static_cast<SpvCapability>(5266)},
        {"RayTracingKHR", static_cast<SpvCapability>(4479)},
        {"RayTracingNV", static_cast<SpvCapability>(5340)},
        {"StorageUniform16", static_cast<SpvCapability>(4434)},
        {"DotProductInput4x8BitKHR", static_cast<SpvCapability>(6017)},
        {"StoragePushConstant8", static_cast<SpvCapability>(4450)},
        {"VariableLengthArrayINTEL", static_cast<SpvCapability>(5817)},
        {"ShaderNonUniformEXT", static_cast<SpvCapability>(5301)},
        {"SubgroupAvcMotionEstimationINTEL", static_cast<SpvCapability>(5696)},
        {"StorageImageArrayNonUniformIndexingEXT", static_cast<SpvCapability>(5309)},
        {"FragmentDensityEXT", static_cast<SpvCapability>(5291)},
        {"LoopFuseINTEL", static_cast<SpvCapability>(5906)},
        {"ImageQuery", static_cast<SpvCapability>(50)},
    };

    static const auto hash = [](const UnownedStringSlice& str, UInt32 salt){
        return combineHash(getHashCode(str), getHashCode(salt)) % 245;
    };

    const auto i = hash(str, tableSalt[hash(str, 0)]);
    if(str == words[i].first)
    {
        value = words[i].second;
        return true;
    }
    else
    {
        return false;
    }
}

bool lookupSpvWord(const UnownedStringSlice& str, SpvWord& value)
{
    static const unsigned tableSalt[944] = {
        3, 4, 2, 0, 0, 1, 2, 1, 1, 1, 2, 3, 7, 1, 2, 1,
        0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 2, 1, 0, 0, 0, 1,
        1, 1, 0, 9, 1, 0, 6, 3, 4, 4, 0, 1, 3, 3, 5, 3,
        4, 4, 2, 1, 0, 2, 17, 7, 1, 1, 4, 1, 2, 1, 0, 1,
        3, 6, 2, 1, 1, 0, 1, 1, 1, 0, 2, 3, 1, 1, 0, 1,
        0, 2, 0, 3, 0, 9, 0, 3, 0, 2, 2, 3, 0, 2, 0, 1,
        0, 0, 0, 0, 2, 1, 4, 1, 0, 1, 0, 0, 3, 0, 1, 4,
        4, 1, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 5, 0, 1, 0,
        1, 0, 1, 6, 2, 1, 0, 6, 1, 0, 3, 0, 5, 2, 10, 0,
        1, 5, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 0, 1, 0, 2,
        3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 1, 5,
        0, 0, 6, 3, 2, 0, 1, 1, 5, 4, 0, 0, 0, 0, 0, 0,
        0, 3, 5, 0, 1, 1, 3, 2, 0, 0, 3, 2, 0, 2, 0, 2,
        0, 2, 0, 3, 0, 0, 0, 6, 0, 0, 1, 1, 6, 4, 2, 2,
        0, 1, 1, 0, 1, 0, 3, 0, 2, 0, 1, 0, 0, 4, 1, 0,
        1, 7, 0, 5, 9, 0, 0, 0, 1, 5, 4, 0, 2, 5, 0, 0,
        7, 0, 6, 2, 2, 0, 5, 1, 5, 2, 1, 4, 4, 0, 2, 7,
        0, 5, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 2, 1,
        3, 0, 0, 0, 3, 0, 1, 8, 2, 0, 1, 2, 2, 2, 3, 0,
        1, 0, 6, 2, 8, 3, 4, 3, 0, 1, 0, 0, 1, 0, 1, 2,
        4, 0, 0, 0, 0, 0, 1, 0, 6, 0, 0, 4, 1, 0, 1, 0,
        0, 4, 3, 2, 1, 0, 0, 1, 0, 3, 0, 6, 4, 0, 1, 1,
        8, 1, 6, 5, 0, 0, 0, 3, 0, 0, 1, 2, 0, 1, 1, 0,
        1, 0, 0, 1, 0, 2, 0, 3, 2, 0, 1, 4, 2, 21, 0, 6,
        3, 2, 8, 0, 3, 2, 0, 1, 4, 0, 2, 3, 2, 2, 1, 2,
        1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 4, 9, 4, 1, 2, 1,
        0, 4, 1, 3, 0, 0, 1, 6, 1, 9, 4, 11, 15, 0, 0, 0,
        1, 1, 0, 0, 1, 0, 2, 1, 0, 0, 5, 0, 1, 2, 3, 1,
        3, 0, 0, 1, 3, 9, 0, 3, 1, 0, 0, 0, 0, 3, 0, 1,
        0, 1, 0, 1, 0, 0, 2, 6, 9, 6, 3, 0, 3, 3, 5, 0,
        0, 1, 0, 0, 2, 0, 1, 4, 3, 0, 5, 1, 0, 0, 1, 8,
        1, 0, 0, 0, 2, 1, 0, 10, 1, 3, 16, 2, 1, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 3, 3, 7, 1, 0, 0,
        15, 1, 0, 2, 8, 3, 7, 0, 0, 0, 1, 3, 0, 4, 0, 1,
        7, 4, 2, 3, 0, 6, 2, 2, 7, 0, 3, 4, 1, 0, 4, 0,
        10, 6, 4, 19, 0, 10, 0, 2, 0, 0, 2, 1, 6, 2, 8, 0,
        0, 2, 9, 26, 0, 2, 5, 0, 28, 0, 0, 0, 10, 1, 0, 0,
        1, 1, 2, 0, 0, 1, 4, 2, 5, 2, 13, 12, 0, 0, 0, 8,
        0, 6, 1, 11, 1, 1, 0, 4, 3, 2, 0, 0, 17, 13, 1, 0,
        4, 2, 1, 10, 17, 9, 26, 2, 8, 1, 0, 25, 4, 5, 0, 0,
        1, 1, 3, 1, 19, 1, 0, 0, 4, 0, 0, 0, 2, 5, 2, 0,
        3, 0, 8, 0, 0, 5, 9, 4, 0, 0, 3, 0, 1, 10, 1, 0,
        2, 0, 0, 5, 1, 4, 0, 3, 0, 17, 4, 0, 1, 3, 3, 2,
        0, 3, 16, 0, 8, 3, 0, 0, 0, 1, 4, 2, 14, 1, 6, 0,
        0, 0, 0, 12, 3, 0, 0, 35, 1, 15, 2, 0, 0, 15, 0, 0,
        11, 5, 2, 0, 6, 20, 2, 0, 0, 2, 0, 2, 0, 17, 17, 0,
        0, 27, 8, 0, 2, 4, 8, 1, 9, 2, 1, 13, 1, 47, 16, 2,
        0, 1, 1, 0, 7, 8, 18, 5, 8, 6, 0, 3, 1, 6, 24, 0,
        1, 7, 14, 0, 1, 19, 0, 3, 0, 33, 0, 10, 21, 8, 4, 8,
        3, 9, 18, 2, 0, 3, 0, 0, 0, 2, 0, 5, 3, 8, 1, 0,
        46, 14, 7, 10, 26, 33, 0, 26, 3, 1, 33, 0, 17, 8, 86, 11,
        7, 16, 0, 38, 9, 10, 1, 0, 31, 10, 5, 16, 67, 8, 1, 17,
        4, 9, 0, 0, 0, 29, 2, 13, 0, 0, 0, 1, 6, 54, 26, 0,
        6, 0, 11, 3, 0, 9, 0, 0, 60, 18, 92, 4, 5, 2, 3, 5,
        0, 12, 0, 80, 25, 0, 0, 3, 1, 1, 0, 1, 0, 9, 19, 8,
        0, 8, 0, 46, 0, 1, 36, 32, 40, 1, 134, 0, 3, 68, 24, 0,
        0, 0, 8, 116, 7, 50, 58, 0, 0, 254, 7, 0, 0, 96, 0, 0,
        22, 0, 0, 45, 0, 35, 0, 0, 78, 0, 5, 3, 32, 120, 66, 5,
        1, 0, 262, 0, 8, 0, 421, 0, 0, 0, 21, 0, 4, 682, 0, 571
    };

    using KV = std::pair<const char*, SpvWord>;

    static const KV words[944] =
    {
        {"ExecutionModeDepthReplacing", static_cast<SpvWord>(12)},
        {"CapabilityImageMipmap", static_cast<SpvWord>(15)},
        {"MemorySemanticsOutputMemory", static_cast<SpvWord>(4096)},
        {"BuiltInWorldToObjectNV", static_cast<SpvWord>(5331)},
        {"DecorationMediaBlockIOINTEL", static_cast<SpvWord>(6140)},
        {"CapabilityStorageUniformBufferBlock16", static_cast<SpvWord>(4433)},
        {"DecorationPerPrimitiveEXT", static_cast<SpvWord>(5271)},
        {"StorageClassIncomingRayPayloadKHR", static_cast<SpvWord>(5342)},
        {"QuantizationModesRND", static_cast<SpvWord>(2)},
        {"ImageChannelOrderR", static_cast<SpvWord>(0)},
        {"LoopControlMaxInterleavingINTEL", static_cast<SpvWord>(2097152)},
        {"CapabilityStorageImageReadWithoutFormat", static_cast<SpvWord>(55)},
        {"StorageClassRayPayloadKHR", static_cast<SpvWord>(5338)},
        {"ImageChannelOrderBGRA", static_cast<SpvWord>(6)},
        {"LoopControlMinIterations", static_cast<SpvWord>(16)},
        {"CapabilityTileImageColorReadAccessEXT", static_cast<SpvWord>(4166)},
        {"CapabilityStorageInputOutput16", static_cast<SpvWord>(4436)},
        {"MemorySemanticsWorkgroupMemory", static_cast<SpvWord>(256)},
        {"RayFlagsSkipClosestHitShaderKHR", static_cast<SpvWord>(8)},
        {"CapabilityLiteralSampler", static_cast<SpvWord>(20)},
        {"CapabilityUniformBufferArrayDynamicIndexing", static_cast<SpvWord>(28)},
        {"BuiltInRayTminNV", static_cast<SpvWord>(5325)},
        {"FPDenormModeFlushToZero", static_cast<SpvWord>(1)},
        {"StorageClassTaskPayloadWorkgroupEXT", static_cast<SpvWord>(5402)},
        {"ExecutionModeNonCoherentDepthAttachmentReadEXT", static_cast<SpvWord>(4170)},
        {"BuiltInSubgroupGeMask", static_cast<SpvWord>(4417)},
        {"ExecutionModeInputTrianglesAdjacency", static_cast<SpvWord>(23)},
        {"CapabilityFloat64", static_cast<SpvWord>(10)},
        {"ImageChannelDataTypeSnormInt16", static_cast<SpvWord>(1)},
        {"BuiltInBaryCoordNoPerspKHR", static_cast<SpvWord>(5287)},
        {"DecorationAliasedPointer", static_cast<SpvWord>(5356)},
        {"ImageFormatRgba16f", static_cast<SpvWord>(2)},
        {"BuiltInMeshViewCountNV", static_cast<SpvWord>(5280)},
        {"RayFlagsCullNoOpaqueKHR", static_cast<SpvWord>(128)},
        {"StorageClassRayPayloadNV", static_cast<SpvWord>(5338)},
        {"SourceLanguageESSL", static_cast<SpvWord>(1)},
        {"StorageClassHitAttributeNV", static_cast<SpvWord>(5339)},
        {"ExecutionModelIntersectionNV", static_cast<SpvWord>(5314)},
        {"DecorationArrayStride", static_cast<SpvWord>(6)},
        {"CapabilityFPFastMathModeINTEL", static_cast<SpvWord>(5837)},
        {"RayFlagsCullBackFacingTrianglesKHR", static_cast<SpvWord>(16)},
        {"BuiltInViewIndex", static_cast<SpvWord>(4440)},
        {"BuiltInPointSize", static_cast<SpvWord>(1)},
        {"DecorationCPacked", static_cast<SpvWord>(10)},
        {"OverflowModesWRAP", static_cast<SpvWord>(0)},
        {"CapabilitySubgroupBallotKHR", static_cast<SpvWord>(4423)},
        {"CapabilityVulkanMemoryModel", static_cast<SpvWord>(5345)},
        {"RayFlagsNoOpaqueKHR", static_cast<SpvWord>(2)},
        {"CapabilityGroupNonUniformShuffle", static_cast<SpvWord>(65)},
        {"BuiltInLayer", static_cast<SpvWord>(9)},
        {"ImageFormatRgba32ui", static_cast<SpvWord>(30)},
        {"PackedVectorFormatPackedVectorFormat4x8Bit", static_cast<SpvWord>(0)},
        {"StorageClassShaderRecordBufferKHR", static_cast<SpvWord>(5343)},
        {"FunctionParameterAttributeNoReadWrite", static_cast<SpvWord>(7)},
        {"ImageFormatR8", static_cast<SpvWord>(15)},
        {"DecorationUserTypeGOOGLE", static_cast<SpvWord>(5636)},
        {"BuiltInMeshViewIndicesNV", static_cast<SpvWord>(5281)},
        {"FPOperationModeIEEE", static_cast<SpvWord>(0)},
        {"CapabilityUniformAndStorageBuffer8BitAccess", static_cast<SpvWord>(4449)},
        {"RayFlagsOpaqueKHR", static_cast<SpvWord>(1)},
        {"CapabilityInt64", static_cast<SpvWord>(11)},
        {"CapabilityFPGAKernelAttributesINTEL", static_cast<SpvWord>(5897)},
        {"StorageClassOutput", static_cast<SpvWord>(3)},
        {"BuiltInSubgroupLocalInvocationId", static_cast<SpvWord>(41)},
        {"CapabilityUniformTexelBufferArrayNonUniformIndexingEXT", static_cast<SpvWord>(5311)},
        {"BuiltInSampleMask", static_cast<SpvWord>(20)},
        {"BuiltInObjectToWorldNV", static_cast<SpvWord>(5330)},
        {"ImageFormatRgba16Snorm", static_cast<SpvWord>(16)},
        {"BuiltInCullDistancePerViewNV", static_cast<SpvWord>(5278)},
        {"ExecutionModelClosestHitKHR", static_cast<SpvWord>(5316)},
        {"CapabilityImageReadWrite", static_cast<SpvWord>(14)},
        {"CapabilityDenormPreserve", static_cast<SpvWord>(4464)},
        {"CapabilitySampleMaskOverrideCoverageNV", static_cast<SpvWord>(5249)},
        {"RayQueryCommittedIntersectionTypeRayQueryCommittedIntersectionGeneratedKHR", static_cast<SpvWord>(2)},
        {"CapabilitySampledImageArrayDynamicIndexing", static_cast<SpvWord>(29)},
        {"CapabilitySampledRect", static_cast<SpvWord>(37)},
        {"FunctionParameterAttributeNoAlias", static_cast<SpvWord>(4)},
        {"CapabilityAtomicFloat16MinMaxEXT", static_cast<SpvWord>(5616)},
        {"SamplerAddressingModeRepeatMirrored", static_cast<SpvWord>(4)},
        {"StorageClassUniformConstant", static_cast<SpvWord>(0)},
        {"CapabilityLongConstantCompositeINTEL", static_cast<SpvWord>(6089)},
        {"DecorationXfbBuffer", static_cast<SpvWord>(36)},
        {"DecorationWeightTextureQCOM", static_cast<SpvWord>(4487)},
        {"ImageFormatR16", static_cast<SpvWord>(14)},
        {"AddressingModelPhysicalStorageBuffer64", static_cast<SpvWord>(5348)},
        {"BuiltInCullPrimitiveEXT", static_cast<SpvWord>(5299)},
        {"ImageFormatRg32i", static_cast<SpvWord>(25)},
        {"DecorationNonWritable", static_cast<SpvWord>(24)},
        {"DecorationRestrict", static_cast<SpvWord>(19)},
        {"BuiltInWorldRayOriginKHR", static_cast<SpvWord>(5321)},
        {"CapabilityGeometryShaderPassthroughNV", static_cast<SpvWord>(5251)},
        {"DecorationIndex", static_cast<SpvWord>(32)},
        {"CooperativeMatrixOperandsNoneKHR", static_cast<SpvWord>(0)},
        {"ExecutionModeSubgroupsPerWorkgroup", static_cast<SpvWord>(36)},
        {"ExecutionModeSubgroupsPerWorkgroupId", static_cast<SpvWord>(37)},
        {"DecorationSideEffectsINTEL", static_cast<SpvWord>(5608)},
        {"SourceLanguageOpenCL_C", static_cast<SpvWord>(3)},
        {"BuiltInObjectToWorldKHR", static_cast<SpvWord>(5330)},
        {"BuiltInInstanceCustomIndexNV", static_cast<SpvWord>(5327)},
        {"ImageOperandsVolatileTexelKHR", static_cast<SpvWord>(2048)},
        {"BuiltInGlobalOffset", static_cast<SpvWord>(33)},
        {"ExecutionModeLocalSize", static_cast<SpvWord>(17)},
        {"ImageChannelOrderRA", static_cast<SpvWord>(3)},
        {"ExecutionModeSampleInterlockOrderedEXT", static_cast<SpvWord>(5368)},
        {"BuiltInSubgroupLtMask", static_cast<SpvWord>(4420)},
        {"CapabilityDotProductInput4x8Bit", static_cast<SpvWord>(6017)},
        {"DecorationMMHostInterfaceAddressWidthINTEL", static_cast<SpvWord>(6177)},
        {"CapabilityMultiView", static_cast<SpvWord>(4439)},
        {"MemoryAccessMakePointerAvailable", static_cast<SpvWord>(8)},
        {"ExecutionModePointMode", static_cast<SpvWord>(10)},
        {"BuiltInWorldRayDirectionKHR", static_cast<SpvWord>(5322)},
        {"ExecutionModeSpacingEqual", static_cast<SpvWord>(1)},
        {"DecorationHlslCounterBufferGOOGLE", static_cast<SpvWord>(5634)},
        {"DecorationNoUnsignedWrap", static_cast<SpvWord>(4470)},
        {"SourceLanguageHERO_C", static_cast<SpvWord>(8)},
        {"FragmentShadingRateHorizontal4Pixels", static_cast<SpvWord>(8)},
        {"AddressingModelPhysicalStorageBuffer64EXT", static_cast<SpvWord>(5348)},
        {"CapabilityImageMSArray", static_cast<SpvWord>(48)},
        {"SourceLanguageHLSL", static_cast<SpvWord>(5)},
        {"BuiltInLaunchSizeNV", static_cast<SpvWord>(5320)},
        {"MemorySemanticsAcquire", static_cast<SpvWord>(2)},
        {"MemoryAccessNonPrivatePointer", static_cast<SpvWord>(32)},
        {"DecorationPerVertexNV", static_cast<SpvWord>(5285)},
        {"CapabilityIndirectReferencesINTEL", static_cast<SpvWord>(5604)},
        {"ImageOperandsNontemporal", static_cast<SpvWord>(16384)},
        {"ExecutionModelKernel", static_cast<SpvWord>(6)},
        {"QuantizationModesTRN", static_cast<SpvWord>(0)},
        {"DecorationStallEnableINTEL", static_cast<SpvWord>(5905)},
        {"MemoryModelOpenCL", static_cast<SpvWord>(2)},
        {"ImageOperandsMakeTexelAvailableKHR", static_cast<SpvWord>(256)},
        {"DecorationDoublepumpINTEL", static_cast<SpvWord>(5831)},
        {"SourceLanguageSYCL", static_cast<SpvWord>(7)},
        {"ImageChannelOrdersRGBA", static_cast<SpvWord>(17)},
        {"CapabilityShader", static_cast<SpvWord>(1)},
        {"ImageChannelOrderRGB", static_cast<SpvWord>(4)},
        {"DecorationRegisterINTEL", static_cast<SpvWord>(5825)},
        {"FPFastMathModeNotNaN", static_cast<SpvWord>(1)},
        {"FPFastMathModeAllowContractFastINTEL", static_cast<SpvWord>(65536)},
        {"FPRoundingModeRTE", static_cast<SpvWord>(0)},
        {"CapabilityShaderClockKHR", static_cast<SpvWord>(5055)},
        {"ImageOperandsMakeTexelAvailable", static_cast<SpvWord>(256)},
        {"DecorationAliased", static_cast<SpvWord>(20)},
        {"DecorationSimpleDualPortINTEL", static_cast<SpvWord>(5833)},
        {"CapabilityAtomicFloat32AddEXT", static_cast<SpvWord>(6033)},
        {"ExecutionModeLocalSizeHintId", static_cast<SpvWord>(39)},
        {"CapabilityGroupUniformArithmeticKHR", static_cast<SpvWord>(6400)},
        {"DecorationCounterBuffer", static_cast<SpvWord>(5634)},
        {"ImageOperandsVolatileTexel", static_cast<SpvWord>(2048)},
        {"CapabilityGroupNonUniformVote", static_cast<SpvWord>(62)},
        {"BuiltInPatchVertices", static_cast<SpvWord>(14)},
        {"CapabilityUniformBufferArrayNonUniformIndexingEXT", static_cast<SpvWord>(5306)},
        {"MemorySemanticsAcquireRelease", static_cast<SpvWord>(8)},
        {"CapabilityShaderViewportIndexLayerNV", static_cast<SpvWord>(5254)},
        {"ImageChannelOrderRGBA", static_cast<SpvWord>(5)},
        {"StorageClassDeviceOnlyINTEL", static_cast<SpvWord>(5936)},
        {"CapabilityGroupNonUniform", static_cast<SpvWord>(61)},
        {"BuiltInWorldToObjectKHR", static_cast<SpvWord>(5331)},
        {"BuiltInRayTminKHR", static_cast<SpvWord>(5325)},
        {"FPFastMathModeNotInf", static_cast<SpvWord>(2)},
        {"BuiltInSubgroupLtMaskKHR", static_cast<SpvWord>(4420)},
        {"ExecutionModeSpacingFractionalOdd", static_cast<SpvWord>(3)},
        {"ImageOperandsOffsets", static_cast<SpvWord>(65536)},
        {"DecorationHlslSemanticGOOGLE", static_cast<SpvWord>(5635)},
        {"CapabilityTransformFeedback", static_cast<SpvWord>(53)},
        {"CapabilityVariablePointers", static_cast<SpvWord>(4442)},
        {"ImageChannelDataTypeSignedInt8", static_cast<SpvWord>(7)},
        {"QuantizationModesRND_MIN_INF", static_cast<SpvWord>(5)},
        {"CapabilityAtomicStorage", static_cast<SpvWord>(21)},
        {"CapabilityStorageImageMultisample", static_cast<SpvWord>(27)},
        {"BuiltInSampleId", static_cast<SpvWord>(18)},
        {"CapabilitySubgroupAvcMotionEstimationChromaINTEL", static_cast<SpvWord>(5698)},
        {"ImageChannelOrderRGBx", static_cast<SpvWord>(12)},
        {"BuiltInCoreMaxIDARM", static_cast<SpvWord>(4162)},
        {"SamplerAddressingModeClamp", static_cast<SpvWord>(2)},
        {"DimSubpassData", static_cast<SpvWord>(6)},
        {"FunctionControlOptNoneINTEL", static_cast<SpvWord>(65536)},
        {"CapabilityImageGatherBiasLodAMD", static_cast<SpvWord>(5009)},
        {"DecorationBlockMatchTextureQCOM", static_cast<SpvWord>(4488)},
        {"BuiltInPrimitiveTriangleIndicesEXT", static_cast<SpvWord>(5296)},
        {"DecorationNoAliasINTEL", static_cast<SpvWord>(5915)},
        {"ExecutionModeRoundingModeRTNINTEL", static_cast<SpvWord>(5621)},
        {"DecorationMathOpDSPModeINTEL", static_cast<SpvWord>(5909)},
        {"StorageClassIncomingCallableDataNV", static_cast<SpvWord>(5329)},
        {"CapabilitySplitBarrierINTEL", static_cast<SpvWord>(6141)},
        {"DecorationComponent", static_cast<SpvWord>(31)},
        {"KernelEnqueueFlagsNoWait", static_cast<SpvWord>(0)},
        {"DecorationDescriptorSet", static_cast<SpvWord>(34)},
        {"CapabilityFragmentShaderPixelInterlockEXT", static_cast<SpvWord>(5378)},
        {"DecorationBuiltIn", static_cast<SpvWord>(11)},
        {"ImageChannelDataTypeUnormInt24", static_cast<SpvWord>(15)},
        {"ExecutionModeOutputLinesEXT", static_cast<SpvWord>(5269)},
        {"CapabilityVariableLengthArrayINTEL", static_cast<SpvWord>(5817)},
        {"ImageChannelDataTypeUnsignedIntRaw12EXT", static_cast<SpvWord>(20)},
        {"CapabilitySubgroupDispatch", static_cast<SpvWord>(58)},
        {"MemorySemanticsSequentiallyConsistent", static_cast<SpvWord>(16)},
        {"DecorationExplicitInterpAMD", static_cast<SpvWord>(4999)},
        {"DimCube", static_cast<SpvWord>(3)},
        {"BuiltInObjectRayOriginKHR", static_cast<SpvWord>(5323)},
        {"ImageFormatRg8Snorm", static_cast<SpvWord>(18)},
        {"ExecutionModeMaxWorkDimINTEL", static_cast<SpvWord>(5894)},
        {"DecorationPerViewNV", static_cast<SpvWord>(5272)},
        {"CapabilityFloatingPointModeINTEL", static_cast<SpvWord>(5583)},
        {"MemoryModelVulkanKHR", static_cast<SpvWord>(3)},
        {"DecorationNonReadable", static_cast<SpvWord>(25)},
        {"BuiltInSubgroupEqMask", static_cast<SpvWord>(4416)},
        {"BuiltInHitTNV", static_cast<SpvWord>(5332)},
        {"ExecutionModeInputLinesAdjacency", static_cast<SpvWord>(21)},
        {"ImageFormatR32f", static_cast<SpvWord>(3)},
        {"BuiltInTessLevelOuter", static_cast<SpvWord>(11)},
        {"StorageClassHitAttributeKHR", static_cast<SpvWord>(5339)},
        {"BuiltInPrimitiveId", static_cast<SpvWord>(7)},
        {"DecorationPassthroughNV", static_cast<SpvWord>(5250)},
        {"SelectionControlNone", static_cast<SpvWord>(0)},
        {"DecorationColMajor", static_cast<SpvWord>(5)},
        {"CapabilityImageBuffer", static_cast<SpvWord>(47)},
        {"ImageFormatR32i", static_cast<SpvWord>(24)},
        {"BuiltInRayGeometryIndexKHR", static_cast<SpvWord>(5352)},
        {"MemorySemanticsVolatile", static_cast<SpvWord>(32768)},
        {"CapabilityDotProductInput4x8BitKHR", static_cast<SpvWord>(6017)},
        {"LoopControlNoFusionINTEL", static_cast<SpvWord>(8388608)},
        {"CooperativeMatrixLayoutColumnMajorKHR", static_cast<SpvWord>(1)},
        {"LinkageTypeLinkOnceODR", static_cast<SpvWord>(2)},
        {"BuiltInPosition", static_cast<SpvWord>(0)},
        {"LoopControlUnroll", static_cast<SpvWord>(1)},
        {"CapabilityCooperativeMatrixNV", static_cast<SpvWord>(5357)},
        {"ExecutionModeContractionOff", static_cast<SpvWord>(31)},
        {"ExecutionModeInputLines", static_cast<SpvWord>(20)},
        {"ExecutionModeOutputPoints", static_cast<SpvWord>(27)},
        {"DecorationVectorComputeCallableFunctionINTEL", static_cast<SpvWord>(6087)},
        {"CapabilitySampleRateShading", static_cast<SpvWord>(35)},
        {"ImageOperandsSample", static_cast<SpvWord>(64)},
        {"CapabilityInputAttachment", static_cast<SpvWord>(40)},
        {"DecorationCoherent", static_cast<SpvWord>(23)},
        {"DecorationFlat", static_cast<SpvWord>(14)},
        {"DecorationVectorComputeFunctionINTEL", static_cast<SpvWord>(5626)},
        {"CapabilityAtomicFloat32MinMaxEXT", static_cast<SpvWord>(5612)},
        {"ImageOperandsOffset", static_cast<SpvWord>(16)},
        {"CapabilityArbitraryPrecisionFixedPointINTEL", static_cast<SpvWord>(5922)},
        {"BuiltInWorldRayOriginNV", static_cast<SpvWord>(5321)},
        {"CapabilityGroups", static_cast<SpvWord>(18)},
        {"CapabilityDotProduct", static_cast<SpvWord>(6019)},
        {"ImageChannelOrderARGB", static_cast<SpvWord>(7)},
        {"CapabilityCoreBuiltinsARM", static_cast<SpvWord>(4165)},
        {"ExecutionModeEarlyAndLateFragmentTestsAMD", static_cast<SpvWord>(5017)},
        {"MemoryAccessNontemporal", static_cast<SpvWord>(4)},
        {"CapabilityFragmentShaderShadingRateInterlockEXT", static_cast<SpvWord>(5372)},
        {"DecorationStream", static_cast<SpvWord>(29)},
        {"CapabilityDebugInfoModuleINTEL", static_cast<SpvWord>(6114)},
        {"CapabilityFragmentShadingRateKHR", static_cast<SpvWord>(4422)},
        {"FunctionControlInline", static_cast<SpvWord>(1)},
        {"ImageChannelOrderA", static_cast<SpvWord>(1)},
        {"CapabilityFunctionFloatControlINTEL", static_cast<SpvWord>(5821)},
        {"BuiltInSubgroupGtMaskKHR", static_cast<SpvWord>(4418)},
        {"DecorationBankwidthINTEL", static_cast<SpvWord>(5828)},
        {"DecorationGLSLShared", static_cast<SpvWord>(8)},
        {"GroupOperationReduce", static_cast<SpvWord>(0)},
        {"CapabilityClipDistance", static_cast<SpvWord>(32)},
        {"ExecutionModeSchedulerTargetFmaxMhzINTEL", static_cast<SpvWord>(5903)},
        {"DecorationMergeINTEL", static_cast<SpvWord>(5834)},
        {"BuiltInFragStencilRefEXT", static_cast<SpvWord>(5014)},
        {"RayFlagsSkipTrianglesKHR", static_cast<SpvWord>(256)},
        {"DecorationVolatile", static_cast<SpvWord>(21)},
        {"CapabilityWorkgroupMemoryExplicitLayoutKHR", static_cast<SpvWord>(4428)},
        {"CapabilityAtomicFloat64AddEXT", static_cast<SpvWord>(6034)},
        {"CapabilityStoragePushConstant16", static_cast<SpvWord>(4435)},
        {"ExecutionModeStencilRefLessBackAMD", static_cast<SpvWord>(5084)},
        {"BuiltInWarpsPerSMNV", static_cast<SpvWord>(5374)},
        {"ExecutionModeOutputVertices", static_cast<SpvWord>(26)},
        {"SourceLanguageGLSL", static_cast<SpvWord>(2)},
        {"CapabilityDotProductInput4x8BitPacked", static_cast<SpvWord>(6018)},
        {"DecorationAliasedPointerEXT", static_cast<SpvWord>(5356)},
        {"CapabilityMatrix", static_cast<SpvWord>(0)},
        {"DecorationFPRoundingMode", static_cast<SpvWord>(39)},
        {"CapabilityMemoryAccessAliasingINTEL", static_cast<SpvWord>(5910)},
        {"RayQueryCandidateIntersectionTypeRayQueryCandidateIntersectionTriangleKHR", static_cast<SpvWord>(0)},
        {"CapabilityLinkage", static_cast<SpvWord>(5)},
        {"ExecutionModeIsolines", static_cast<SpvWord>(25)},
        {"ScopeInvocation", static_cast<SpvWord>(4)},
        {"StorageClassHitObjectAttributeNV", static_cast<SpvWord>(5385)},
        {"CapabilityRayTracingNV", static_cast<SpvWord>(5340)},
        {"MemorySemanticsMakeVisible", static_cast<SpvWord>(16384)},
        {"FunctionParameterAttributeNoWrite", static_cast<SpvWord>(6)},
        {"ImageOperandsConstOffsets", static_cast<SpvWord>(32)},
        {"FunctionControlDontInline", static_cast<SpvWord>(2)},
        {"QuantizationModesRND_CONV", static_cast<SpvWord>(6)},
        {"ExecutionModeRoundingModeRTZ", static_cast<SpvWord>(4463)},
        {"ExecutionModeVertexOrderCcw", static_cast<SpvWord>(5)},
        {"CapabilityFPGAMemoryAttributesINTEL", static_cast<SpvWord>(5824)},
        {"CapabilityStorageTexelBufferArrayDynamicIndexingEXT", static_cast<SpvWord>(5305)},
        {"ExecutionModelMissKHR", static_cast<SpvWord>(5317)},
        {"CapabilityMeshShadingNV", static_cast<SpvWord>(5266)},
        {"CapabilityVariablePointersStorageBuffer", static_cast<SpvWord>(4441)},
        {"CapabilityRayTracingMotionBlurNV", static_cast<SpvWord>(5341)},
        {"DecorationMaxByteOffset", static_cast<SpvWord>(45)},
        {"StorageClassImage", static_cast<SpvWord>(11)},
        {"DecorationMMHostInterfaceMaxBurstINTEL", static_cast<SpvWord>(6181)},
        {"ImageChannelOrderABGR", static_cast<SpvWord>(19)},
        {"CooperativeMatrixUseMatrixAKHR", static_cast<SpvWord>(0)},
        {"ImageChannelDataTypeSignedInt16", static_cast<SpvWord>(8)},
        {"StorageClassFunction", static_cast<SpvWord>(7)},
        {"CapabilityRuntimeDescriptorArrayEXT", static_cast<SpvWord>(5302)},
        {"RayQueryIntersectionRayQueryCommittedIntersectionKHR", static_cast<SpvWord>(1)},
        {"DecorationUserSemantic", static_cast<SpvWord>(5635)},
        {"ImageChannelDataTypeHalfFloat", static_cast<SpvWord>(13)},
        {"DecorationMMHostInterfaceDataWidthINTEL", static_cast<SpvWord>(6178)},
        {"ImageFormatR16i", static_cast<SpvWord>(28)},
        {"ImageChannelOrderDepthStencil", static_cast<SpvWord>(14)},
        {"DecorationRestrictPointer", static_cast<SpvWord>(5355)},
        {"ImageFormatR64i", static_cast<SpvWord>(41)},
        {"CooperativeMatrixOperandsMatrixCSignedComponentsKHR", static_cast<SpvWord>(4)},
        {"CapabilityShaderInvocationReorderNV", static_cast<SpvWord>(5383)},
        {"DecorationFunctionRoundingModeINTEL", static_cast<SpvWord>(5822)},
        {"CapabilityTextureSampleWeightedQCOM", static_cast<SpvWord>(4484)},
        {"ExecutionModeOutputTriangleStrip", static_cast<SpvWord>(29)},
        {"BuiltInFragSizeEXT", static_cast<SpvWord>(5292)},
        {"DecorationNonUniform", static_cast<SpvWord>(5300)},
        {"DecorationClobberINTEL", static_cast<SpvWord>(5607)},
        {"DecorationLatencyControlLabelINTEL", static_cast<SpvWord>(6172)},
        {"CapabilityBFloat16ConversionINTEL", static_cast<SpvWord>(6115)},
        {"MemoryAccessVolatile", static_cast<SpvWord>(1)},
        {"DecorationBufferBlock", static_cast<SpvWord>(3)},
        {"DecorationLocation", static_cast<SpvWord>(30)},
        {"DecorationUniform", static_cast<SpvWord>(26)},
        {"CapabilityUniformTexelBufferArrayDynamicIndexing", static_cast<SpvWord>(5304)},
        {"CapabilityStorageBuffer16BitAccess", static_cast<SpvWord>(4433)},
        {"ImageChannelDataTypeUnsignedInt8", static_cast<SpvWord>(10)},
        {"DecorationNonUniformEXT", static_cast<SpvWord>(5300)},
        {"ExecutionModeVertexOrderCw", static_cast<SpvWord>(4)},
        {"SourceLanguageNZSL", static_cast<SpvWord>(9)},
        {"ImageChannelDataTypeUnormShort565", static_cast<SpvWord>(4)},
        {"CooperativeMatrixOperandsMatrixASignedComponentsKHR", static_cast<SpvWord>(1)},
        {"BuiltInLayerPerViewNV", static_cast<SpvWord>(5279)},
        {"BuiltInSMIDNV", static_cast<SpvWord>(5377)},
        {"ImageChannelDataTypeUnormInt8", static_cast<SpvWord>(2)},
        {"BuiltInFragInvocationCountEXT", static_cast<SpvWord>(5293)},
        {"BuiltInHitTriangleVertexPositionsKHR", static_cast<SpvWord>(5335)},
        {"ImageFormatRgba8Snorm", static_cast<SpvWord>(5)},
        {"ImageOperandsZeroExtend", static_cast<SpvWord>(8192)},
        {"DecorationPerPrimitiveNV", static_cast<SpvWord>(5271)},
        {"DecorationFunctionDenormModeINTEL", static_cast<SpvWord>(5823)},
        {"BuiltInInstanceId", static_cast<SpvWord>(6)},
        {"BuiltInBaryCoordSmoothCentroidAMD", static_cast<SpvWord>(4996)},
        {"ExecutionModeOriginLowerLeft", static_cast<SpvWord>(8)},
        {"CapabilityMultiViewport", static_cast<SpvWord>(57)},
        {"DecorationSIMTCallINTEL", static_cast<SpvWord>(5599)},
        {"DecorationAlignmentId", static_cast<SpvWord>(46)},
        {"CapabilityStorageBufferArrayDynamicIndexing", static_cast<SpvWord>(30)},
        {"DecorationNoContraction", static_cast<SpvWord>(42)},
        {"ExecutionModeInputPoints", static_cast<SpvWord>(19)},
        {"CapabilityPerViewAttributesNV", static_cast<SpvWord>(5260)},
        {"DecorationPrefetchINTEL", static_cast<SpvWord>(5902)},
        {"CapabilityStorageImageWriteWithoutFormat", static_cast<SpvWord>(56)},
        {"BuiltInBaryCoordNoPerspSampleAMD", static_cast<SpvWord>(4994)},
        {"LoopControlLoopCoalesceINTEL", static_cast<SpvWord>(1048576)},
        {"DecorationRegisterMapKernelArgumentINTEL", static_cast<SpvWord>(6176)},
        {"CapabilityFragmentDensityEXT", static_cast<SpvWord>(5291)},
        {"DecorationMMHostInterfaceLatencyINTEL", static_cast<SpvWord>(6179)},
        {"CapabilityUniformBufferArrayNonUniformIndexing", static_cast<SpvWord>(5306)},
        {"QuantizationModesTRN_ZERO", static_cast<SpvWord>(1)},
        {"ImageChannelOrderDepth", static_cast<SpvWord>(13)},
        {"CapabilityPhysicalStorageBufferAddresses", static_cast<SpvWord>(5347)},
        {"DecorationSpecId", static_cast<SpvWord>(1)},
        {"SourceLanguageUnknown", static_cast<SpvWord>(0)},
        {"CapabilityRayQueryKHR", static_cast<SpvWord>(4472)},
        {"CapabilityFragmentFullyCoveredEXT", static_cast<SpvWord>(5265)},
        {"DecorationDontStaticallyCoalesceINTEL", static_cast<SpvWord>(5901)},
        {"ImageFormatRgba16i", static_cast<SpvWord>(22)},
        {"BuiltInLaunchSizeKHR", static_cast<SpvWord>(5320)},
        {"BuiltInInvocationsPerPixelNV", static_cast<SpvWord>(5293)},
        {"BuiltInViewportIndex", static_cast<SpvWord>(10)},
        {"CapabilityVectorAnyINTEL", static_cast<SpvWord>(5619)},
        {"Dim3D", static_cast<SpvWord>(2)},
        {"DecorationHitObjectShaderRecordBufferNV", static_cast<SpvWord>(5386)},
        {"CapabilityRoundingModeRTE", static_cast<SpvWord>(4467)},
        {"DecorationFunctionFloatingPointModeINTEL", static_cast<SpvWord>(6080)},
        {"CapabilityImageCubeArray", static_cast<SpvWord>(34)},
        {"FPFastMathModeNone", static_cast<SpvWord>(0)},
        {"BuiltInVertexIndex", static_cast<SpvWord>(42)},
        {"CapabilityDotProductKHR", static_cast<SpvWord>(6019)},
        {"ImageFormatRgba32i", static_cast<SpvWord>(21)},
        {"CapabilityShaderViewportIndexLayerEXT", static_cast<SpvWord>(5254)},
        {"MemorySemanticsNone", static_cast<SpvWord>(0)},
        {"DecorationBinding", static_cast<SpvWord>(33)},
        {"CapabilityFragmentMaskAMD", static_cast<SpvWord>(5010)},
        {"ScopeDevice", static_cast<SpvWord>(1)},
        {"CapabilityDemoteToHelperInvocationEXT", static_cast<SpvWord>(5379)},
        {"MemoryAccessNoAliasINTELMask", static_cast<SpvWord>(131072)},
        {"ExecutionModelRayGenerationKHR", static_cast<SpvWord>(5313)},
        {"CooperativeMatrixOperandsMatrixBSignedComponentsKHR", static_cast<SpvWord>(2)},
        {"CapabilityVulkanMemoryModelKHR", static_cast<SpvWord>(5345)},
        {"ExecutionModeShadingRateInterlockUnorderedEXT", static_cast<SpvWord>(5371)},
        {"ImageChannelDataTypeFloat", static_cast<SpvWord>(14)},
        {"BuiltInShadingRateKHR", static_cast<SpvWord>(4444)},
        {"ImageOperandsBias", static_cast<SpvWord>(1)},
        {"FunctionControlNone", static_cast<SpvWord>(0)},
        {"ExecutionModeNonCoherentColorAttachmentReadEXT", static_cast<SpvWord>(4169)},
        {"ExecutionModeStencilRefGreaterBackAMD", static_cast<SpvWord>(5083)},
        {"MemoryAccessNonPrivatePointerKHR", static_cast<SpvWord>(32)},
        {"ImageChannelDataTypeUnsignedInt32", static_cast<SpvWord>(12)},
        {"DecorationMaxConcurrencyINTEL", static_cast<SpvWord>(5918)},
        {"LoopControlDependencyLength", static_cast<SpvWord>(8)},
        {"BuiltInHelperInvocation", static_cast<SpvWord>(23)},
        {"CapabilityFPGALoopControlsINTEL", static_cast<SpvWord>(5888)},
        {"BuiltInSubgroupLeMask", static_cast<SpvWord>(4419)},
        {"CapabilityStorageBufferArrayNonUniformIndexingEXT", static_cast<SpvWord>(5308)},
        {"ImageFormatRg32ui", static_cast<SpvWord>(35)},
        {"CapabilitySampledImageArrayNonUniformIndexingEXT", static_cast<SpvWord>(5307)},
        {"BuiltInSubgroupId", static_cast<SpvWord>(40)},
        {"ImageFormatR11fG11fB10f", static_cast<SpvWord>(8)},
        {"LoopControlPeelCount", static_cast<SpvWord>(128)},
        {"BuiltInSubgroupLeMaskKHR", static_cast<SpvWord>(4419)},
        {"CapabilityNamedBarrier", static_cast<SpvWord>(59)},
        {"DecorationSingleElementVectorINTEL", static_cast<SpvWord>(6085)},
        {"DecorationForcePow2DepthINTEL", static_cast<SpvWord>(5836)},
        {"DimTileImageDataEXT", static_cast<SpvWord>(4173)},
        {"BuiltInBaseVertex", static_cast<SpvWord>(4424)},
        {"DecorationUniformId", static_cast<SpvWord>(27)},
        {"BuiltInBaryCoordPullModelAMD", static_cast<SpvWord>(4998)},
        {"ExecutionModeDerivativeGroupQuadsNV", static_cast<SpvWord>(5289)},
        {"AccessQualifierReadOnly", static_cast<SpvWord>(0)},
        {"StorageClassPrivate", static_cast<SpvWord>(6)},
        {"CapabilityArbitraryPrecisionIntegersINTEL", static_cast<SpvWord>(5844)},
        {"CapabilityRayTracingProvisionalKHR", static_cast<SpvWord>(5353)},
        {"MemorySemanticsMakeAvailable", static_cast<SpvWord>(8192)},
        {"CapabilityShaderNonUniform", static_cast<SpvWord>(5301)},
        {"CapabilitySampled1D", static_cast<SpvWord>(43)},
        {"ImageFormatRgba8", static_cast<SpvWord>(4)},
        {"CapabilityImageGatherExtended", static_cast<SpvWord>(25)},
        {"CapabilitySubgroupBufferBlockIOINTEL", static_cast<SpvWord>(5569)},
        {"CapabilityStorageUniform16", static_cast<SpvWord>(4434)},
        {"BuiltInCullMaskKHR", static_cast<SpvWord>(6021)},
        {"DecorationCentroid", static_cast<SpvWord>(16)},
        {"CapabilityRayCullMaskKHR", static_cast<SpvWord>(6020)},
        {"CapabilityTileImageStencilReadAccessEXT", static_cast<SpvWord>(4168)},
        {"ImageFormatR8i", static_cast<SpvWord>(29)},
        {"CapabilityShaderStereoViewNV", static_cast<SpvWord>(5259)},
        {"Dim1D", static_cast<SpvWord>(0)},
        {"CapabilityStorageImageArrayNonUniformIndexing", static_cast<SpvWord>(5309)},
        {"ExecutionModeOutputPrimitivesNV", static_cast<SpvWord>(5270)},
        {"DecorationAlignment", static_cast<SpvWord>(44)},
        {"BuiltInVertexId", static_cast<SpvWord>(5)},
        {"ImageFormatRg8ui", static_cast<SpvWord>(37)},
        {"FunctionParameterAttributeZext", static_cast<SpvWord>(0)},
        {"CapabilityRayTracingPositionFetchKHR", static_cast<SpvWord>(5336)},
        {"CapabilityVulkanMemoryModelDeviceScope", static_cast<SpvWord>(5346)},
        {"MemorySemanticsImageMemory", static_cast<SpvWord>(2048)},
        {"StorageClassCrossWorkgroup", static_cast<SpvWord>(5)},
        {"StorageClassInput", static_cast<SpvWord>(1)},
        {"MemoryModelSimple", static_cast<SpvWord>(0)},
        {"MemorySemanticsSubgroupMemory", static_cast<SpvWord>(128)},
        {"StorageClassHostOnlyINTEL", static_cast<SpvWord>(5937)},
        {"CapabilityImageQuery", static_cast<SpvWord>(50)},
        {"ExecutionModeLocalSizeHint", static_cast<SpvWord>(18)},
        {"ImageOperandsSignExtend", static_cast<SpvWord>(4096)},
        {"ExecutionModelCallableKHR", static_cast<SpvWord>(5318)},
        {"CapabilityIOPipesINTEL", static_cast<SpvWord>(5943)},
        {"KernelEnqueueFlagsWaitKernel", static_cast<SpvWord>(1)},
        {"CapabilityImageReadWriteLodAMD", static_cast<SpvWord>(5015)},
        {"ImageFormatR8ui", static_cast<SpvWord>(39)},
        {"ExecutionModeInvocations", static_cast<SpvWord>(0)},
        {"ExecutionModeNoGlobalOffsetINTEL", static_cast<SpvWord>(5895)},
        {"QuantizationModesRND_INF", static_cast<SpvWord>(4)},
        {"RayFlagsTerminateOnFirstHitKHR", static_cast<SpvWord>(4)},
        {"CapabilityAtomicStorageOps", static_cast<SpvWord>(4445)},
        {"CapabilityFPGARegINTEL", static_cast<SpvWord>(5948)},
        {"LoopControlMaxIterations", static_cast<SpvWord>(32)},
        {"ExecutionModelIntersectionKHR", static_cast<SpvWord>(5314)},
        {"BuiltInPrimitiveCountNV", static_cast<SpvWord>(5275)},
        {"CapabilityFloat16ImageAMD", static_cast<SpvWord>(5008)},
        {"ScopeShaderCallKHR", static_cast<SpvWord>(6)},
        {"BuiltInHitKindNV", static_cast<SpvWord>(5333)},
        {"ExecutionModeDepthUnchanged", static_cast<SpvWord>(16)},
        {"BuiltInSubgroupMaxSize", static_cast<SpvWord>(37)},
        {"CapabilityGroupNonUniformArithmetic", static_cast<SpvWord>(63)},
        {"LoopControlPipelineEnableINTEL", static_cast<SpvWord>(524288)},
        {"CapabilitySignedZeroInfNanPreserve", static_cast<SpvWord>(4466)},
        {"MemorySemanticsMakeVisibleKHR", static_cast<SpvWord>(16384)},
        {"ExecutionModeOutputTrianglesEXT", static_cast<SpvWord>(5298)},
        {"BuiltInClipDistance", static_cast<SpvWord>(3)},
        {"ExecutionModelMeshEXT", static_cast<SpvWord>(5365)},
        {"ImageChannelOrderRx", static_cast<SpvWord>(10)},
        {"DecorationConstant", static_cast<SpvWord>(22)},
        {"ExecutionModeStencilRefUnchangedBackAMD", static_cast<SpvWord>(5082)},
        {"DecorationSample", static_cast<SpvWord>(17)},
        {"BuiltInEnqueuedWorkgroupSize", static_cast<SpvWord>(32)},
        {"CapabilityFloat16", static_cast<SpvWord>(9)},
        {"CapabilityBitInstructions", static_cast<SpvWord>(6025)},
        {"CooperativeMatrixOperandsSaturatingAccumulationKHR", static_cast<SpvWord>(16)},
        {"BuiltInCoreIDARM", static_cast<SpvWord>(4160)},
        {"CapabilityFPMaxErrorINTEL", static_cast<SpvWord>(6169)},
        {"CapabilityTextureBlockMatchQCOM", static_cast<SpvWord>(4486)},
        {"CapabilityInt64ImageEXT", static_cast<SpvWord>(5016)},
        {"BuiltInInstanceIndex", static_cast<SpvWord>(43)},
        {"ExecutionModePostDepthCoverage", static_cast<SpvWord>(4446)},
        {"ScopeSubgroup", static_cast<SpvWord>(3)},
        {"CapabilityStencilExportEXT", static_cast<SpvWord>(5013)},
        {"MemorySemanticsRelease", static_cast<SpvWord>(4)},
        {"StorageClassCodeSectionINTEL", static_cast<SpvWord>(5605)},
        {"MemoryAccessAliasScopeINTELMask", static_cast<SpvWord>(65536)},
        {"FragmentShadingRateVertical4Pixels", static_cast<SpvWord>(2)},
        {"FunctionControlPure", static_cast<SpvWord>(4)},
        {"DecorationVectorComputeVariableINTEL", static_cast<SpvWord>(5624)},
        {"StorageClassIncomingRayPayloadNV", static_cast<SpvWord>(5342)},
        {"FunctionParameterAttributeNoCapture", static_cast<SpvWord>(5)},
        {"CapabilityUniformAndStorageBuffer16BitAccess", static_cast<SpvWord>(4434)},
        {"CapabilityCullDistance", static_cast<SpvWord>(33)},
        {"DecorationBlock", static_cast<SpvWord>(2)},
        {"ExecutionModelTaskEXT", static_cast<SpvWord>(5364)},
        {"MemoryAccessMakePointerVisible", static_cast<SpvWord>(16)},
        {"DecorationGLSLPacked", static_cast<SpvWord>(9)},
        {"CapabilityShadingRateNV", static_cast<SpvWord>(5291)},
        {"CapabilityUSMStorageClassesINTEL", static_cast<SpvWord>(5935)},
        {"ExecutionModeSpacingFractionalEven", static_cast<SpvWord>(2)},
        {"BuiltInNumWorkgroups", static_cast<SpvWord>(24)},
        {"BuiltInCullDistance", static_cast<SpvWord>(4)},
        {"ExecutionModeOutputPrimitivesEXT", static_cast<SpvWord>(5270)},
        {"LoopControlDependencyArrayINTEL", static_cast<SpvWord>(262144)},
        {"DecorationFPMaxErrorDecorationINTEL", static_cast<SpvWord>(6170)},
        {"ImageChannelOrderIntensity", static_cast<SpvWord>(8)},
        {"DecorationRestrictPointerEXT", static_cast<SpvWord>(5355)},
        {"Dim2D", static_cast<SpvWord>(1)},
        {"ImageOperandsMakeTexelVisible", static_cast<SpvWord>(512)},
        {"CapabilityStorageTexelBufferArrayDynamicIndexing", static_cast<SpvWord>(5305)},
        {"ImageFormatR16ui", static_cast<SpvWord>(38)},
        {"CapabilityGroupNonUniformPartitionedNV", static_cast<SpvWord>(5297)},
        {"FunctionParameterAttributeRuntimeAlignedINTEL", static_cast<SpvWord>(5940)},
        {"BuiltInWarpMaxIDARM", static_cast<SpvWord>(4164)},
        {"CapabilityGroupNonUniformRotateKHR", static_cast<SpvWord>(6026)},
        {"CapabilityFPGAMemoryAccessesINTEL", static_cast<SpvWord>(5898)},
        {"MemorySemanticsOutputMemoryKHR", static_cast<SpvWord>(4096)},
        {"CapabilityKernelAttributesINTEL", static_cast<SpvWord>(5892)},
        {"RayQueryCommittedIntersectionTypeRayQueryCommittedIntersectionNoneKHR", static_cast<SpvWord>(0)},
        {"CapabilityShaderViewportMaskNV", static_cast<SpvWord>(5255)},
        {"ImageFormatRgba16", static_cast<SpvWord>(10)},
        {"CapabilityWorkgroupMemoryExplicitLayout8BitAccessKHR", static_cast<SpvWord>(4429)},
        {"ExecutionModeEarlyFragmentTests", static_cast<SpvWord>(9)},
        {"ImageFormatRg8i", static_cast<SpvWord>(27)},
        {"CapabilityShaderViewportIndex", static_cast<SpvWord>(70)},
        {"BuiltInFragDepth", static_cast<SpvWord>(22)},
        {"MemoryAccessMakePointerAvailableKHR", static_cast<SpvWord>(8)},
        {"ImageFormatRg16Snorm", static_cast<SpvWord>(17)},
        {"MemorySemanticsAtomicCounterMemory", static_cast<SpvWord>(1024)},
        {"CapabilityShaderSMBuiltinsNV", static_cast<SpvWord>(5373)},
        {"LoopControlNone", static_cast<SpvWord>(0)},
        {"ImageChannelOrderRGx", static_cast<SpvWord>(11)},
        {"LoopControlMaxConcurrencyINTEL", static_cast<SpvWord>(131072)},
        {"CapabilityCooperativeMatrixKHR", static_cast<SpvWord>(6022)},
        {"CapabilityInt16", static_cast<SpvWord>(22)},
        {"CapabilityInt64Atomics", static_cast<SpvWord>(12)},
        {"DecorationLinkageAttributes", static_cast<SpvWord>(41)},
        {"CapabilityFPGADSPControlINTEL", static_cast<SpvWord>(5908)},
        {"CapabilityStorageImageArrayNonUniformIndexingEXT", static_cast<SpvWord>(5309)},
        {"BuiltInWorkgroupId", static_cast<SpvWord>(26)},
        {"CapabilityFPGALatencyControlINTEL", static_cast<SpvWord>(6171)},
        {"BuiltInPrimitiveIndicesNV", static_cast<SpvWord>(5276)},
        {"BuiltInRayTmaxKHR", static_cast<SpvWord>(5326)},
        {"CapabilityDerivativeControl", static_cast<SpvWord>(51)},
        {"DecorationBurstCoalesceINTEL", static_cast<SpvWord>(5899)},
        {"ExecutionModelTessellationControl", static_cast<SpvWord>(1)},
        {"CapabilityBindlessTextureNV", static_cast<SpvWord>(5390)},
        {"BuiltInHitKindKHR", static_cast<SpvWord>(5333)},
        {"CapabilityTessellationPointSize", static_cast<SpvWord>(23)},
        {"CapabilityInputAttachmentArrayDynamicIndexingEXT", static_cast<SpvWord>(5303)},
        {"RayFlagsForceOpacityMicromap2StateEXT", static_cast<SpvWord>(1024)},
        {"ExecutionModeSubgroupUniformControlFlowKHR", static_cast<SpvWord>(4421)},
        {"CapabilityDotProductInput4x8BitPackedKHR", static_cast<SpvWord>(6018)},
        {"ExecutionModelMeshNV", static_cast<SpvWord>(5268)},
        {"ImageChannelOrderRG", static_cast<SpvWord>(2)},
        {"GroupOperationClusteredReduce", static_cast<SpvWord>(3)},
        {"CapabilityRayQueryProvisionalKHR", static_cast<SpvWord>(4471)},
        {"ExecutionModelFragment", static_cast<SpvWord>(4)},
        {"BuiltInPrimitiveShadingRateKHR", static_cast<SpvWord>(4432)},
        {"ExecutionModelAnyHitKHR", static_cast<SpvWord>(5315)},
        {"DecorationBoundSamplerNV", static_cast<SpvWord>(5400)},
        {"DecorationNoSignedWrap", static_cast<SpvWord>(4469)},
        {"CapabilityInputAttachmentArrayNonUniformIndexingEXT", static_cast<SpvWord>(5310)},
        {"ExecutionModeStreamingInterfaceINTEL", static_cast<SpvWord>(6154)},
        {"StorageClassTileImageEXT", static_cast<SpvWord>(4172)},
        {"FPFastMathModeAllowReassocINTEL", static_cast<SpvWord>(131072)},
        {"CapabilityAtomicFloat64MinMaxEXT", static_cast<SpvWord>(5613)},
        {"AddressingModelPhysical32", static_cast<SpvWord>(1)},
        {"DecorationFuncParamAttr", static_cast<SpvWord>(38)},
        {"BuiltInSubgroupSize", static_cast<SpvWord>(36)},
        {"FPFastMathModeNSZ", static_cast<SpvWord>(4)},
        {"CapabilityUniformDecoration", static_cast<SpvWord>(71)},
        {"StorageClassGeneric", static_cast<SpvWord>(8)},
        {"ExecutionModeOutputLineStrip", static_cast<SpvWord>(28)},
        {"SamplerAddressingModeRepeat", static_cast<SpvWord>(3)},
        {"ExecutionModelTessellationEvaluation", static_cast<SpvWord>(2)},
        {"ExecutionModeSubgroupSize", static_cast<SpvWord>(35)},
        {"LoopControlIterationMultiple", static_cast<SpvWord>(64)},
        {"ExecutionModeDenormPreserve", static_cast<SpvWord>(4459)},
        {"ExecutionModeStencilRefGreaterFrontAMD", static_cast<SpvWord>(5080)},
        {"ExecutionModeOutputTrianglesNV", static_cast<SpvWord>(5298)},
        {"BuiltInCoreCountARM", static_cast<SpvWord>(4161)},
        {"DecorationPerVertexKHR", static_cast<SpvWord>(5285)},
        {"ExecutionModeDepthGreater", static_cast<SpvWord>(14)},
        {"AccessQualifierReadWrite", static_cast<SpvWord>(2)},
        {"ExecutionModeNumSIMDWorkitemsINTEL", static_cast<SpvWord>(5896)},
        {"BuiltInPrimitiveLineIndicesEXT", static_cast<SpvWord>(5295)},
        {"CapabilityRayTracingKHR", static_cast<SpvWord>(4479)},
        {"MemoryAccessMakePointerVisibleKHR", static_cast<SpvWord>(16)},
        {"DecorationMemoryINTEL", static_cast<SpvWord>(5826)},
        {"CapabilityFragmentBarycentricNV", static_cast<SpvWord>(5284)},
        {"FunctionParameterAttributeSret", static_cast<SpvWord>(3)},
        {"CapabilityGeometryPointSize", static_cast<SpvWord>(24)},
        {"BuiltInNumEnqueuedSubgroups", static_cast<SpvWord>(39)},
        {"LoopControlDontUnroll", static_cast<SpvWord>(2)},
        {"StorageClassWorkgroup", static_cast<SpvWord>(4)},
        {"SamplerFilterModeNearest", static_cast<SpvWord>(0)},
        {"DecorationStackCallINTEL", static_cast<SpvWord>(5627)},
        {"RayQueryIntersectionRayQueryCandidateIntersectionKHR", static_cast<SpvWord>(0)},
        {"BuiltInFragmentSizeNV", static_cast<SpvWord>(5292)},
        {"BuiltInBaryCoordNV", static_cast<SpvWord>(5286)},
        {"LoopControlInitiationIntervalINTEL", static_cast<SpvWord>(65536)},
        {"CapabilityMeshShadingEXT", static_cast<SpvWord>(5283)},
        {"SamplerAddressingModeNone", static_cast<SpvWord>(0)},
        {"BuiltInFragCoord", static_cast<SpvWord>(15)},
        {"ExecutionModelTaskNV", static_cast<SpvWord>(5267)},
        {"ImageFormatRg16ui", static_cast<SpvWord>(36)},
        {"CapabilityPipes", static_cast<SpvWord>(17)},
        {"ImageFormatRgba32f", static_cast<SpvWord>(1)},
        {"ExecutionModeDerivativeGroupLinearNV", static_cast<SpvWord>(5290)},
        {"ImageOperandsConstOffset", static_cast<SpvWord>(8)},
        {"CapabilityAddresses", static_cast<SpvWord>(4)},
        {"CapabilityInputAttachmentArrayNonUniformIndexing", static_cast<SpvWord>(5310)},
        {"FragmentShadingRateVertical2Pixels", static_cast<SpvWord>(1)},
        {"FPFastMathModeAllowRecip", static_cast<SpvWord>(8)},
        {"ImageFormatR64ui", static_cast<SpvWord>(40)},
        {"CapabilitySubgroupImageMediaBlockIOINTEL", static_cast<SpvWord>(5579)},
        {"DecorationMaxPrivateCopiesINTEL", static_cast<SpvWord>(5829)},
        {"DecorationStableKernelArgumentINTEL", static_cast<SpvWord>(6183)},
        {"BuiltInBaseInstance", static_cast<SpvWord>(4425)},
        {"BuiltInWorkDim", static_cast<SpvWord>(30)},
        {"CapabilityDeviceGroup", static_cast<SpvWord>(4437)},
        {"CapabilityStorageTexelBufferArrayNonUniformIndexing", static_cast<SpvWord>(5312)},
        {"BuiltInPositionPerViewNV", static_cast<SpvWord>(5261)},
        {"CapabilityMinLod", static_cast<SpvWord>(42)},
        {"CapabilityFragmentShaderSampleInterlockEXT", static_cast<SpvWord>(5363)},
        {"BuiltInWorkgroupSize", static_cast<SpvWord>(25)},
        {"StorageClassCallableDataNV", static_cast<SpvWord>(5328)},
        {"ExecutionModelRayGenerationNV", static_cast<SpvWord>(5313)},
        {"ExecutionModeDepthLess", static_cast<SpvWord>(15)},
        {"SamplerFilterModeLinear", static_cast<SpvWord>(1)},
        {"BuiltInObjectRayDirectionNV", static_cast<SpvWord>(5324)},
        {"CapabilityFloat16Buffer", static_cast<SpvWord>(8)},
        {"CapabilityIntegerFunctions2INTEL", static_cast<SpvWord>(5584)},
        {"LoopControlSpeculatedIterationsINTEL", static_cast<SpvWord>(4194304)},
        {"DecorationIOPipeStorageINTEL", static_cast<SpvWord>(5944)},
        {"BuiltInDeviceIndex", static_cast<SpvWord>(4438)},
        {"CapabilityVectorComputeINTEL", static_cast<SpvWord>(5617)},
        {"CapabilityUnstructuredLoopControlsINTEL", static_cast<SpvWord>(5886)},
        {"DecorationMatrixStride", static_cast<SpvWord>(7)},
        {"DecorationPatch", static_cast<SpvWord>(15)},
        {"BuiltInInstanceCustomIndexKHR", static_cast<SpvWord>(5327)},
        {"CapabilityFPGAKernelAttributesv2INTEL", static_cast<SpvWord>(6161)},
        {"BuiltInSecondaryPositionNV", static_cast<SpvWord>(5257)},
        {"ImageFormatRgb10A2", static_cast<SpvWord>(11)},
        {"CapabilitySubgroupShuffleINTEL", static_cast<SpvWord>(5568)},
        {"CapabilityRayTraversalPrimitiveCullingKHR", static_cast<SpvWord>(4478)},
        {"CapabilityAsmINTEL", static_cast<SpvWord>(5606)},
        {"ExecutionModeQuads", static_cast<SpvWord>(24)},
        {"DecorationRelaxedPrecision", static_cast<SpvWord>(0)},
        {"StorageClassShaderRecordBufferNV", static_cast<SpvWord>(5343)},
        {"ExecutionModeOriginUpperLeft", static_cast<SpvWord>(7)},
        {"CapabilityInt8", static_cast<SpvWord>(39)},
        {"CapabilityDotProductInputAll", static_cast<SpvWord>(6016)},
        {"CapabilityInterpolationFunction", static_cast<SpvWord>(52)},
        {"CapabilityGroupNonUniformBallot", static_cast<SpvWord>(64)},
        {"ExecutionModeRoundingModeRTPINTEL", static_cast<SpvWord>(5620)},
        {"CapabilityRoundToInfinityINTEL", static_cast<SpvWord>(5582)},
        {"CapabilityOptNoneINTEL", static_cast<SpvWord>(6094)},
        {"OverflowModesSAT_SYM", static_cast<SpvWord>(3)},
        {"CapabilityExpectAssumeKHR", static_cast<SpvWord>(5629)},
        {"DecorationSaturatedConversion", static_cast<SpvWord>(28)},
        {"CapabilityRuntimeAlignedAttributeINTEL", static_cast<SpvWord>(5939)},
        {"ImageFormatR32ui", static_cast<SpvWord>(33)},
        {"BuiltInGlobalLinearId", static_cast<SpvWord>(34)},
        {"ExecutionModeTriangles", static_cast<SpvWord>(22)},
        {"ImageOperandsNonPrivateTexel", static_cast<SpvWord>(1024)},
        {"SelectionControlDontFlatten", static_cast<SpvWord>(2)},
        {"BuiltInIncomingRayFlagsNV", static_cast<SpvWord>(5351)},
        {"BuiltInSMCountNV", static_cast<SpvWord>(5375)},
        {"CapabilitySubgroupImageBlockIOINTEL", static_cast<SpvWord>(5570)},
        {"DecorationSecondaryViewportRelativeNV", static_cast<SpvWord>(5256)},
        {"MemoryAccessAligned", static_cast<SpvWord>(2)},
        {"ExecutionModelCallableNV", static_cast<SpvWord>(5318)},
        {"CapabilityDenormFlushToZero", static_cast<SpvWord>(4465)},
        {"CapabilityComputeDerivativeGroupLinearNV", static_cast<SpvWord>(5350)},
        {"StorageClassCallableDataKHR", static_cast<SpvWord>(5328)},
        {"CapabilityFragmentBarycentricKHR", static_cast<SpvWord>(5284)},
        {"SourceLanguageOpenCL_CPP", static_cast<SpvWord>(4)},
        {"LinkageTypeExport", static_cast<SpvWord>(0)},
        {"DimBuffer", static_cast<SpvWord>(5)},
        {"DimRect", static_cast<SpvWord>(4)},
        {"ImageChannelDataTypeUnsignedIntRaw10EXT", static_cast<SpvWord>(19)},
        {"ExecutionModePixelInterlockOrderedEXT", static_cast<SpvWord>(5366)},
        {"CapabilityRoundingModeRTZ", static_cast<SpvWord>(4468)},
        {"ImageChannelDataTypeUnsignedInt16", static_cast<SpvWord>(11)},
        {"ImageChannelDataTypeSnormInt8", static_cast<SpvWord>(0)},
        {"CapabilityLoopFuseINTEL", static_cast<SpvWord>(5906)},
        {"GroupOperationExclusiveScan", static_cast<SpvWord>(2)},
        {"ImageChannelOrdersRGB", static_cast<SpvWord>(15)},
        {"DecorationNoPerspective", static_cast<SpvWord>(13)},
        {"BuiltInGlobalInvocationId", static_cast<SpvWord>(28)},
        {"CapabilityComputeDerivativeGroupQuadsNV", static_cast<SpvWord>(5288)},
        {"BuiltInPointCoord", static_cast<SpvWord>(16)},
        {"CapabilityFPGAClusterAttributesINTEL", static_cast<SpvWord>(5904)},
        {"ScopeQueueFamilyKHR", static_cast<SpvWord>(5)},
        {"GroupOperationPartitionedExclusiveScanNV", static_cast<SpvWord>(8)},
        {"BuiltInPrimitivePointIndicesEXT", static_cast<SpvWord>(5294)},
        {"DecorationPerTaskNV", static_cast<SpvWord>(5273)},
        {"CapabilityStoragePushConstant8", static_cast<SpvWord>(4450)},
        {"ImageChannelDataTypeSignedInt32", static_cast<SpvWord>(9)},
        {"ImageChannelOrderLuminance", static_cast<SpvWord>(9)},
        {"FPDenormModePreserve", static_cast<SpvWord>(0)},
        {"BuiltInLocalInvocationId", static_cast<SpvWord>(27)},
        {"ExecutionModelMissNV", static_cast<SpvWord>(5317)},
        {"CapabilityWorkgroupMemoryExplicitLayout16BitAccessKHR", static_cast<SpvWord>(4430)},
        {"ImageChannelOrdersRGBx", static_cast<SpvWord>(16)},
        {"BuiltInSubgroupGtMask", static_cast<SpvWord>(4418)},
        {"FragmentShadingRateHorizontal2Pixels", static_cast<SpvWord>(4)},
        {"CapabilityAtomicFloat16AddEXT", static_cast<SpvWord>(6095)},
        {"ImageChannelOrdersBGRA", static_cast<SpvWord>(18)},
        {"DecorationConduitKernelArgumentINTEL", static_cast<SpvWord>(6175)},
        {"BuiltInTessLevelInner", static_cast<SpvWord>(12)},
        {"DecorationMaxByteOffsetId", static_cast<SpvWord>(47)},
        {"ExecutionModelAnyHitNV", static_cast<SpvWord>(5315)},
        {"CapabilityGroupNonUniformQuad", static_cast<SpvWord>(68)},
        {"CapabilityDotProductInputAllKHR", static_cast<SpvWord>(6016)},
        {"SourceLanguageWGSL", static_cast<SpvWord>(10)},
        {"ExecutionModeLocalSizeId", static_cast<SpvWord>(38)},
        {"StorageClassAtomicCounter", static_cast<SpvWord>(10)},
        {"CapabilityKernel", static_cast<SpvWord>(6)},
        {"DecorationAliasScopeINTEL", static_cast<SpvWord>(5914)},
        {"ImageOperandsMakeTexelVisibleKHR", static_cast<SpvWord>(512)},
        {"CapabilityInputAttachmentArrayDynamicIndexing", static_cast<SpvWord>(5303)},
        {"ExecutionModeInitializer", static_cast<SpvWord>(33)},
        {"BuiltInTessCoord", static_cast<SpvWord>(13)},
        {"RayFlagsSkipAABBsKHR", static_cast<SpvWord>(512)},
        {"MemorySemanticsRelaxed", static_cast<SpvWord>(0)},
        {"DecorationLatencyControlConstraintINTEL", static_cast<SpvWord>(6173)},
        {"CapabilityTessellation", static_cast<SpvWord>(3)},
        {"ExecutionModeSharedLocalMemorySizeINTEL", static_cast<SpvWord>(5618)},
        {"CooperativeMatrixOperandsMatrixResultSignedComponentsKHR", static_cast<SpvWord>(8)},
        {"BuiltInBaryCoordSmoothAMD", static_cast<SpvWord>(4995)},
        {"BuiltInRayTmaxNV", static_cast<SpvWord>(5326)},
        {"ExecutionModelGeometry", static_cast<SpvWord>(3)},
        {"ImageFormatRgb10a2ui", static_cast<SpvWord>(34)},
        {"ExecutionModelClosestHitNV", static_cast<SpvWord>(5316)},
        {"RayFlagsCullOpaqueKHR", static_cast<SpvWord>(64)},
        {"BuiltInCurrentRayTimeNV", static_cast<SpvWord>(5334)},
        {"CooperativeMatrixUseMatrixAccumulatorKHR", static_cast<SpvWord>(2)},
        {"BuiltInInvocationId", static_cast<SpvWord>(8)},
        {"DecorationMMHostInterfaceReadWriteModeINTEL", static_cast<SpvWord>(6180)},
        {"ExecutionModelGLCompute", static_cast<SpvWord>(5)},
        {"CapabilityGroupNonUniformShuffleRelative", static_cast<SpvWord>(66)},
        {"CapabilitySampledImageArrayNonUniformIndexing", static_cast<SpvWord>(5307)},
        {"CapabilityStorageBuffer8BitAccess", static_cast<SpvWord>(4448)},
        {"StorageClassPhysicalStorageBuffer", static_cast<SpvWord>(5349)},
        {"DecorationRowMajor", static_cast<SpvWord>(4)},
        {"CapabilitySubgroupVoteKHR", static_cast<SpvWord>(4431)},
        {"ExecutionModeShadingRateInterlockOrderedEXT", static_cast<SpvWord>(5370)},
        {"ImageChannelDataTypeUnormInt16", static_cast<SpvWord>(3)},
        {"FunctionParameterAttributeSext", static_cast<SpvWord>(1)},
        {"FPOperationModeALT", static_cast<SpvWord>(1)},
        {"RayFlagsCullFrontFacingTrianglesKHR", static_cast<SpvWord>(32)},
        {"RayQueryCommittedIntersectionTypeRayQueryCommittedIntersectionTriangleKHR", static_cast<SpvWord>(1)},
        {"CapabilitySubgroupAvcMotionEstimationIntraINTEL", static_cast<SpvWord>(5697)},
        {"CapabilityFunctionPointersINTEL", static_cast<SpvWord>(5603)},
        {"ExecutionModeSampleInterlockUnorderedEXT", static_cast<SpvWord>(5369)},
        {"CapabilityUniformTexelBufferArrayNonUniformIndexing", static_cast<SpvWord>(5311)},
        {"BuiltInWarpIDARM", static_cast<SpvWord>(4163)},
        {"CapabilityStorageImageExtendedFormats", static_cast<SpvWord>(49)},
        {"CapabilityBlockingPipesINTEL", static_cast<SpvWord>(5945)},
        {"ExecutionModeXfb", static_cast<SpvWord>(11)},
        {"BuiltInSubgroupEqMaskKHR", static_cast<SpvWord>(4416)},
        {"BuiltInDrawIndex", static_cast<SpvWord>(4426)},
        {"ImageChannelDataTypeUnormInt101010_2", static_cast<SpvWord>(16)},
        {"CapabilityVulkanMemoryModelDeviceScopeKHR", static_cast<SpvWord>(5346)},
        {"ExecutionModeDenormFlushToZero", static_cast<SpvWord>(4460)},
        {"CapabilityStorageTexelBufferArrayNonUniformIndexingEXT", static_cast<SpvWord>(5312)},
        {"BuiltInGlobalSize", static_cast<SpvWord>(31)},
        {"BuiltInWarpIDNV", static_cast<SpvWord>(5376)},
        {"CapabilitySparseResidency", static_cast<SpvWord>(41)},
        {"CapabilityImage1D", static_cast<SpvWord>(44)},
        {"ImageFormatR16Snorm", static_cast<SpvWord>(19)},
        {"ImageFormatR16f", static_cast<SpvWord>(9)},
        {"DecorationNumbanksINTEL", static_cast<SpvWord>(5827)},
        {"SamplerAddressingModeClampToEdge", static_cast<SpvWord>(1)},
        {"DecorationBindlessImageNV", static_cast<SpvWord>(5399)},
        {"DecorationGlobalVariableOffsetINTEL", static_cast<SpvWord>(5628)},
        {"StorageClassPushConstant", static_cast<SpvWord>(9)},
        {"BuiltInSamplePosition", static_cast<SpvWord>(19)},
        {"BuiltInWorldRayDirectionNV", static_cast<SpvWord>(5322)},
        {"ScopeWorkgroup", static_cast<SpvWord>(2)},
        {"DecorationBufferLocationINTEL", static_cast<SpvWord>(5921)},
        {"BuiltInIncomingRayFlagsKHR", static_cast<SpvWord>(5351)},
        {"CapabilityGroupNonUniformClustered", static_cast<SpvWord>(67)},
        {"DecorationOffset", static_cast<SpvWord>(35)},
        {"StorageClassPhysicalStorageBufferEXT", static_cast<SpvWord>(5349)},
        {"BuiltInViewportMaskNV", static_cast<SpvWord>(5253)},
        {"MemoryModelGLSL450", static_cast<SpvWord>(1)},
        {"BuiltInBaryCoordSmoothSampleAMD", static_cast<SpvWord>(4997)},
        {"CapabilityGeometry", static_cast<SpvWord>(2)},
        {"BuiltInViewportMaskPerViewNV", static_cast<SpvWord>(5262)},
        {"ExecutionModeFloatingPointModeALTINTEL", static_cast<SpvWord>(5622)},
        {"ExecutionModeFinalizer", static_cast<SpvWord>(34)},
        {"CapabilityTileImageDepthReadAccessEXT", static_cast<SpvWord>(4167)},
        {"BuiltInBaryCoordNoPerspCentroidAMD", static_cast<SpvWord>(4993)},
        {"BuiltInBaryCoordKHR", static_cast<SpvWord>(5286)},
        {"CapabilitySubgroupAvcMotionEstimationINTEL", static_cast<SpvWord>(5696)},
        {"RayQueryCandidateIntersectionTypeRayQueryCandidateIntersectionAABBKHR", static_cast<SpvWord>(1)},
        {"CapabilityTextureBoxFilterQCOM", static_cast<SpvWord>(4485)},
        {"KernelProfilingInfoCmdExecTime", static_cast<SpvWord>(1)},
        {"BuiltInFrontFacing", static_cast<SpvWord>(17)},
        {"CapabilityDrawParameters", static_cast<SpvWord>(4427)},
        {"ImageChannelDataTypeUnormShort555", static_cast<SpvWord>(5)},
        {"KernelProfilingInfoNone", static_cast<SpvWord>(0)},
        {"ImageFormatUnknown", static_cast<SpvWord>(0)},
        {"GroupOperationPartitionedReduceNV", static_cast<SpvWord>(6)},
        {"BuiltInLaunchIdKHR", static_cast<SpvWord>(5319)},
        {"ImageFormatR8Snorm", static_cast<SpvWord>(20)},
        {"CapabilityFPGABufferLocationINTEL", static_cast<SpvWord>(5920)},
        {"BuiltInObjectRayDirectionKHR", static_cast<SpvWord>(5324)},
        {"ExecutionModelVertex", static_cast<SpvWord>(0)},
        {"BuiltInSecondaryViewportMaskNV", static_cast<SpvWord>(5258)},
        {"DecorationInputAttachmentIndex", static_cast<SpvWord>(43)},
        {"CapabilityRuntimeDescriptorArray", static_cast<SpvWord>(5302)},
        {"LoopControlDependencyInfinite", static_cast<SpvWord>(4)},
        {"GroupOperationPartitionedInclusiveScanNV", static_cast<SpvWord>(7)},
        {"ImageFormatRgba8i", static_cast<SpvWord>(23)},
        {"CapabilityShaderNonUniformEXT", static_cast<SpvWord>(5301)},
        {"DecorationMaxReplicatesINTEL", static_cast<SpvWord>(5832)},
        {"CapabilityRayTracingOpacityMicromapEXT", static_cast<SpvWord>(5381)},
        {"ExecutionModeSignedZeroInfNanPreserve", static_cast<SpvWord>(4461)},
        {"ImageOperandsLod", static_cast<SpvWord>(2)},
        {"ExecutionModeMaxWorkgroupSizeINTEL", static_cast<SpvWord>(5893)},
        {"LinkageTypeImport", static_cast<SpvWord>(1)},
        {"RayFlagsNoneKHR", static_cast<SpvWord>(0)},
        {"BuiltInLocalInvocationIndex", static_cast<SpvWord>(29)},
        {"BuiltInBaryCoordNoPerspNV", static_cast<SpvWord>(5287)},
        {"DecorationViewportRelativeNV", static_cast<SpvWord>(5252)},
        {"ExecutionModeStencilRefUnchangedFrontAMD", static_cast<SpvWord>(5079)},
        {"ScopeCrossDevice", static_cast<SpvWord>(0)},
        {"CapabilityGenericPointer", static_cast<SpvWord>(38)},
        {"FPRoundingModeRTP", static_cast<SpvWord>(2)},
        {"KernelEnqueueFlagsWaitWorkGroup", static_cast<SpvWord>(2)},
        {"DecorationPipelineEnableINTEL", static_cast<SpvWord>(5919)},
        {"ImageFormatRgba16ui", static_cast<SpvWord>(31)},
        {"FunctionParameterAttributeByVal", static_cast<SpvWord>(2)},
        {"MemoryModelVulkan", static_cast<SpvWord>(3)},
        {"ImageFormatRg8", static_cast<SpvWord>(13)},
        {"QuantizationModesRND_ZERO", static_cast<SpvWord>(3)},
        {"MemorySemanticsUniformMemory", static_cast<SpvWord>(64)},
        {"CapabilityImageRect", static_cast<SpvWord>(36)},
        {"ExecutionModeRegisterMapInterfaceINTEL", static_cast<SpvWord>(6160)},
        {"BuiltInObjectRayOriginNV", static_cast<SpvWord>(5323)},
        {"CapabilityPhysicalStorageBufferAddressesEXT", static_cast<SpvWord>(5347)},
        {"StorageClassIncomingCallableDataKHR", static_cast<SpvWord>(5329)},
        {"AddressingModelPhysical64", static_cast<SpvWord>(2)},
        {"FPFastMathModeFast", static_cast<SpvWord>(16)},
        {"ExecutionModeFloatingPointModeIEEEINTEL", static_cast<SpvWord>(5623)},
        {"BuiltInClipDistancePerViewNV", static_cast<SpvWord>(5277)},
        {"FPRoundingModeRTN", static_cast<SpvWord>(3)},
        {"PackedVectorFormatPackedVectorFormat4x8BitKHR", static_cast<SpvWord>(0)},
        {"DecorationOverrideCoverageNV", static_cast<SpvWord>(5248)},
        {"FunctionControlConst", static_cast<SpvWord>(8)},
        {"ImageFormatRg16", static_cast<SpvWord>(12)},
        {"ExecutionModePixelInterlockUnorderedEXT", static_cast<SpvWord>(5367)},
        {"CapabilityPipeStorage", static_cast<SpvWord>(60)},
        {"SourceLanguageCPP_for_OpenCL", static_cast<SpvWord>(6)},
        {"ImageFormatRg16i", static_cast<SpvWord>(26)},
        {"ScopeQueueFamily", static_cast<SpvWord>(5)},
        {"DecorationFPFastMathMode", static_cast<SpvWord>(40)},
        {"CapabilityVector16", static_cast<SpvWord>(7)},
        {"AddressingModelLogical", static_cast<SpvWord>(0)},
        {"ImageFormatRg32f", static_cast<SpvWord>(6)},
        {"ExecutionModeNonCoherentStencilAttachmentReadEXT", static_cast<SpvWord>(4171)},
        {"ExecutionModeRoundingModeRTE", static_cast<SpvWord>(4462)},
        {"ImageOperandsNonPrivateTexelKHR", static_cast<SpvWord>(1024)},
        {"CapabilitySampledCubeArray", static_cast<SpvWord>(45)},
        {"ImageOperandsNone", static_cast<SpvWord>(0)},
        {"DecorationFuseLoopsInFunctionINTEL", static_cast<SpvWord>(5907)},
        {"FPRoundingModeRTZ", static_cast<SpvWord>(1)},
        {"CapabilityStorageBufferArrayNonUniformIndexing", static_cast<SpvWord>(5308)},
        {"CapabilityShaderLayer", static_cast<SpvWord>(69)},
        {"MemorySemanticsMakeAvailableKHR", static_cast<SpvWord>(8192)},
        {"BuiltInNumSubgroups", static_cast<SpvWord>(38)},
        {"ImageFormatRg16f", static_cast<SpvWord>(7)},
        {"SelectionControlFlatten", static_cast<SpvWord>(1)},
        {"DecorationReferencedIndirectlyINTEL", static_cast<SpvWord>(5602)},
        {"DecorationBankBitsINTEL", static_cast<SpvWord>(5835)},
        {"BuiltInFullyCoveredEXT", static_cast<SpvWord>(5264)},
        {"CooperativeMatrixLayoutRowMajorKHR", static_cast<SpvWord>(0)},
        {"DecorationBindlessSamplerNV", static_cast<SpvWord>(5398)},
        {"ExecutionModeOutputLinesNV", static_cast<SpvWord>(5269)},
        {"ImageOperandsMinLod", static_cast<SpvWord>(128)},
        {"QuantizationModesRND_CONV_ODD", static_cast<SpvWord>(7)},
        {"StorageClassUniform", static_cast<SpvWord>(2)},
        {"ImageChannelDataTypeUnormInt101010", static_cast<SpvWord>(6)},
        {"BuiltInSubgroupGeMaskKHR", static_cast<SpvWord>(4417)},
        {"ExecutionModeStencilRefLessFrontAMD", static_cast<SpvWord>(5081)},
        {"CooperativeMatrixUseMatrixBKHR", static_cast<SpvWord>(1)},
        {"CapabilitySampledBuffer", static_cast<SpvWord>(46)},
        {"MemorySemanticsCrossWorkgroupMemory", static_cast<SpvWord>(512)},
        {"LoopControlPartialCount", static_cast<SpvWord>(256)},
        {"CapabilityGeometryStreams", static_cast<SpvWord>(54)},
        {"BuiltInTaskCountNV", static_cast<SpvWord>(5274)},
        {"CapabilityDeviceEnqueue", static_cast<SpvWord>(19)},
        {"ExecutionModeStencilRefReplacingEXT", static_cast<SpvWord>(5027)},
        {"BuiltInBaryCoordNoPerspAMD", static_cast<SpvWord>(4992)},
        {"CapabilityImageBasic", static_cast<SpvWord>(13)},
        {"GroupOperationInclusiveScan", static_cast<SpvWord>(1)},
        {"AccessQualifierWriteOnly", static_cast<SpvWord>(1)},
        {"ExecutionModeVecTypeHint", static_cast<SpvWord>(30)},
        {"DecorationInitiationIntervalINTEL", static_cast<SpvWord>(5917)},
        {"ExecutionModePixelCenterInteger", static_cast<SpvWord>(6)},
        {"CapabilityArbitraryPrecisionFloatingPointINTEL", static_cast<SpvWord>(5845)},
        {"CapabilitySampleMaskPostDepthCoverage", static_cast<SpvWord>(4447)},
        {"CapabilityFPGAInvocationPipeliningAttributesINTEL", static_cast<SpvWord>(5916)},
        {"DecorationInvariant", static_cast<SpvWord>(18)},
        {"DecorationCacheSizeINTEL", static_cast<SpvWord>(5900)},
        {"DecorationBoundImageNV", static_cast<SpvWord>(5401)},
        {"LoopControlMaxReinvocationDelayINTEL", static_cast<SpvWord>(33554432)},
        {"CapabilityFPGAArgumentInterfacesINTEL", static_cast<SpvWord>(6174)},
        {"ImageFormatRgba8ui", static_cast<SpvWord>(32)},
        {"OverflowModesSAT_ZERO", static_cast<SpvWord>(2)},
        {"CapabilityDemoteToHelperInvocation", static_cast<SpvWord>(5379)},
        {"BuiltInLaunchIdNV", static_cast<SpvWord>(5319)},
        {"OverflowModesSAT", static_cast<SpvWord>(1)},
        {"LoopControlLoopCountINTEL", static_cast<SpvWord>(16777216)},
        {"DecorationFuncParamIOKindINTEL", static_cast<SpvWord>(5625)},
        {"CapabilityRayQueryPositionFetchKHR", static_cast<SpvWord>(5391)},
        {"DecorationSinglepumpINTEL", static_cast<SpvWord>(5830)},
        {"ImageOperandsGrad", static_cast<SpvWord>(4)},
        {"DecorationMMHostInterfaceWaitRequestINTEL", static_cast<SpvWord>(6182)},
        {"CapabilityImageFootprintNV", static_cast<SpvWord>(5282)},
        {"MemoryAccessNone", static_cast<SpvWord>(0)},
        {"StorageClassStorageBuffer", static_cast<SpvWord>(12)},
        {"ExecutionModeNamedBarrierCountINTEL", static_cast<SpvWord>(6417)},
        {"DecorationXfbStride", static_cast<SpvWord>(37)},
        {"CapabilityUniformTexelBufferArrayDynamicIndexingEXT", static_cast<SpvWord>(5304)},
        {"CapabilityStorageImageArrayDynamicIndexing", static_cast<SpvWord>(31)},
    };

    static const auto hash = [](const UnownedStringSlice& str, UInt32 salt){
        return combineHash(getHashCode(str), getHashCode(salt)) % 944;
    };

    const auto i = hash(str, tableSalt[hash(str, 0)]);
    if(str == words[i].first)
    {
        value = words[i].second;
        return true;
    }
    else
    {
        return false;
    }
}

static bool getOpInfo(const SpvOp& op, SPIRVCoreGrammarInfo::OpInfo& info)
{
    switch(op)
    {
        case 0: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 1: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 2: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 3: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 6: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 7: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 8: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 10: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 11: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 12: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 14: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 15: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 16: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 17: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 19: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 20: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 21: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 22: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 23: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 24: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 25: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 26: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 27: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 28: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 29: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 30: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 31: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 32: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 33: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 34: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 35: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 36: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 37: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 38: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 39: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, -1}; return true;
        case 41: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 42: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 43: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 44: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 45: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 46: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 48: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 49: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 50: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 51: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 52: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, 0, 1}; return true;
        case 54: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 55: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 56: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 57: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 59: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 60: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 61: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 62: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 63: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 64: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 65: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 66: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 67: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 68: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 69: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 70: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 71: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 72: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 73: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 74: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 75: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 77: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 78: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 79: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 80: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 81: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 82: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 83: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 84: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 86: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 87: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 88: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 89: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 90: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 91: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 92: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 93: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 94: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 95: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 96: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 97: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 98: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 99: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 100: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 101: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 102: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 103: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 104: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 105: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 106: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 107: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 109: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 110: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 111: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 112: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 113: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 114: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 115: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 116: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 117: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 118: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 119: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 120: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 121: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 122: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 123: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 124: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 126: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 127: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 128: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 129: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 130: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 131: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 132: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 133: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 134: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 135: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 136: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 137: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 138: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 139: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 140: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 141: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 142: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 143: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 144: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 145: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 146: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 147: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 148: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 149: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 150: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 151: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 152: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 154: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 155: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 156: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 157: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 158: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 159: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 160: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 161: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 162: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 163: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 164: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 165: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 166: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 167: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 168: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 169: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 170: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 171: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 172: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 173: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 174: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 175: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 176: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 177: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 178: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 179: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 180: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 181: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 182: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 183: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 184: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 185: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 186: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 187: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 188: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 189: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 190: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 191: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 194: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 195: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 196: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 197: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 198: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 199: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 200: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 201: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 202: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 203: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 204: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 205: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 207: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 208: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 209: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 210: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 211: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 212: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 213: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 214: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 215: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 218: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 219: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 220: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 221: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 224: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 225: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 227: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 228: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 229: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 230: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 231: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 232: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 233: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 234: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 235: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 236: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 237: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 238: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 239: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 240: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 241: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 242: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 245: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 246: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 247: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 248: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 249: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 250: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 251: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 252: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 253: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 254: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 255: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 256: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 257: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 259: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 260: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 261: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 262: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 263: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 264: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 265: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 266: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 267: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 268: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 269: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 270: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 271: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 274: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 275: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 276: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 277: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 278: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 279: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 280: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 281: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 282: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 283: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 284: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 285: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 286: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 287: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 288: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 291: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 292: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 293: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 294: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 295: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 296: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 297: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 298: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 299: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 300: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 301: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 302: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 303: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 304: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 305: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 306: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 307: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 308: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 309: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 310: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 311: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 312: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 313: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 314: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 315: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 316: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 317: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 318: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 319: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 320: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 321: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 322: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 323: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 324: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 325: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 326: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 327: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 328: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 329: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 330: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 331: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 332: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 333: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 334: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 335: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 336: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 337: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 338: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 339: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 340: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 341: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 342: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 343: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 344: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 345: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 346: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 347: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 348: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 349: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 350: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 351: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 352: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 353: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 354: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 355: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 356: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 357: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 358: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 359: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 360: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 361: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 362: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 363: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 364: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 365: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 366: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 400: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 401: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 402: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 403: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4160: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4161: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4162: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4416: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4421: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4422: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4428: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4429: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4430: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4431: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4432: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4445: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4446: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4447: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4448: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4449: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4450: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4451: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4452: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4453: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4454: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4455: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4456: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 4457: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4458: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4459: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4460: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4472: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 4473: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4474: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4475: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4476: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 4477: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4479: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4480: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4481: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4482: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 4483: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5000: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5001: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5002: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5003: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5004: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5005: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5006: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5007: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5011: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5012: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5056: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5249: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5250: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5251: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5252: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5253: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5254: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5255: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5256: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5257: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5258: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5259: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5260: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5261: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5262: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5263: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5264: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5265: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5266: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5267: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5268: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5269: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5270: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5271: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5272: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5273: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5274: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5275: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5276: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5277: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5278: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5279: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5280: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5281: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5283: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5294: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5295: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5296: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5299: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5334: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5335: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5336: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5337: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5338: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5339: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5340: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5341: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5344: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5358: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5359: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5360: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5361: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5362: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5364: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5365: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5380: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5381: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5391: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5392: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5393: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5394: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5395: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5396: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5397: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5571: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5572: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5573: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5574: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5575: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5576: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5577: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5578: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5580: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5581: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5585: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5586: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5587: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5588: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5589: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5590: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5591: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5592: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5593: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5594: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5595: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5596: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5597: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5598: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5600: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5601: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5609: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5610: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5611: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5614: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5615: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5630: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5631: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5632: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5633: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5699: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5700: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5701: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5702: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5703: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5704: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5705: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5706: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5707: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5708: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5709: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5710: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5711: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5712: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5713: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5714: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5715: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5716: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5717: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5718: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5719: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5720: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5721: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5722: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5723: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5724: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5725: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5726: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5727: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5728: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5729: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5730: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5731: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5732: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5733: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5734: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5735: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5736: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5737: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5738: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5739: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5740: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5741: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5742: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5743: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5744: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5745: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5746: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5747: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5748: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5749: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5750: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5751: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5752: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5753: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5754: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5755: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5756: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5757: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5758: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5759: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5760: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5761: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5762: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5763: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5764: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5765: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5766: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5767: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5768: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5769: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5770: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5771: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5772: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5773: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5774: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5775: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5776: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5777: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5778: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5779: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5780: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5781: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5782: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5783: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5784: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5785: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5786: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5787: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5788: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5789: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5790: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5791: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5792: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5793: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5794: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5795: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5796: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5797: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5798: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5799: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5800: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5801: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5802: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5803: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5804: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5805: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5806: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5807: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5808: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5809: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5810: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5811: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5812: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5813: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5814: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5815: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5816: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5818: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5819: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5820: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5840: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5841: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5842: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5843: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5846: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5847: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5848: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5849: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5850: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5851: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5852: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5853: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5854: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5855: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5856: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5857: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5858: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5859: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5860: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5861: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5862: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5863: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5864: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5865: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5866: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5867: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5868: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5869: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5870: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5871: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5872: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5873: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5874: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5875: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5876: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5877: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5878: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5879: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5880: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5881: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5882: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5887: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 5911: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5912: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5913: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, 0}; return true;
        case 5923: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5924: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5925: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5926: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5927: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5928: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5929: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5930: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5931: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5932: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5933: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5934: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5938: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5946: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5947: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 5949: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6016: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6017: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6018: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6019: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6020: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6021: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6022: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6023: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6024: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6025: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6026: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6027: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6028: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6029: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6030: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6031: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6032: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6035: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6086: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, 0}; return true;
        case 6090: info = {SPIRVCoreGrammarInfo::OpInfo::TypeDeclaration, -1, -1}; return true;
        case 6091: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, -1, -1}; return true;
        case 6092: info = {SPIRVCoreGrammarInfo::OpInfo::ConstantCreation, -1, -1}; return true;
        case 6116: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6117: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6142: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 6143: info = {SPIRVCoreGrammarInfo::OpInfo::Other, -1, -1}; return true;
        case 6401: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6402: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6403: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6404: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6405: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6406: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6407: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        case 6408: info = {SPIRVCoreGrammarInfo::OpInfo::Other, 0, 1}; return true;
        default: return false;
    }
}

RefPtr<SPIRVCoreGrammarInfo> SPIRVCoreGrammarInfo::getEmbeddedVersion()
{
    static SPIRVCoreGrammarInfo embedded = [](){
        SPIRVCoreGrammarInfo info;
        info.spvOps.embedded = &lookupSpvOp;
        info.spvCapabilities.embedded = &lookupSpvCapability;
        info.anyEnum.embedded = &lookupSpvWord;
        info.opInfo.embedded = &getOpInfo;
        info.addReference();
        return info;
    }();
    return &embedded;
}
}
